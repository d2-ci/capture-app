{"version":3,"sources":["../static/js/92.e80c89e7.chunk.js","../node_modules/date-fns/locale/cs/build_distance_in_words_locale/index.js"],"names":["webpackJsonp","508","module","exports","declensionGroup","scheme","count","one","twoFour","other","declension","time","group","replace","extractPreposition","token","filter","preposition","match","RegExp","prefixPreposition","translation","length","suffixPreposition","lowercaseFirstLetter","string","charAt","toLowerCase","slice","buildDistanceInWordsLocale","localize","options","key","substring","distanceInWordsLocale","addSuffix","comparison","xSeconds","regular","past","future","halfAMinute","xMinutes","xHours","xDays","xMonths","xYears"],"mappings":"AAAAA,cAAc,KAERC,IACA,SAAUC,EAAQC,GCHxB,QAAAC,GAAAC,EAAAC,GACA,WAAAA,EACAD,EAAAE,IAGAD,GAAA,GAAAA,GAAA,EACAD,EAAAG,QAIAH,EAAAI,MAGA,QAAAC,GAAAL,EAAAC,EAAAK,GACA,GAAAC,GAAAR,EAAAC,EAAAC,EAEA,QADAM,EAAAD,IAAAC,GACAC,QAAA,YAAqCP,GAGrC,QAAAQ,GAAAC,GAKA,OAJA,oCAAAC,OAAA,SAAAC,GACA,QAAAF,EAAAG,MAAA,GAAAC,QAAA,IAAAF,MAGA,GAGA,QAAAG,GAAAH,GACA,GAAAI,GAAA,EAUA,OARA,WAAAJ,IACAI,EAAA,SAGA,UAAAJ,IACAI,EAAA,4BAGAA,EAAAC,OAAA,EAAAD,EAAA,OAGA,QAAAE,GAAAN,GACA,GAAAI,GAAA,EAUA,OARA,aAAAJ,IACAI,EAAA,yBAGA,SAAAJ,IACAI,EAAA,oBAGAA,EAAAC,OAAA,EAAAD,EAAA,OAGA,QAAAG,GAAAC,GACA,MAAAA,GAAAC,OAAA,GAAAC,cAAAF,EAAAG,MAAA,GAGA,QAAAC,KAuHA,QAAAC,GAAAf,EAAAT,EAAAyB,GACAA,OAEA,IAAAd,GAAAH,EAAAC,IAAA,GACAiB,EAAAR,EAAAT,EAAAkB,UAAAhB,EAAAK,SACAjB,EAAA6B,EAAAF,EAEA,OAAAD,GAAAI,UAIAJ,EAAAK,WAAA,EACAhB,EAAAH,GAAA,MAAAM,EAAAN,GAAAP,EAAAL,EAAAC,EAAA,UAEAc,EAAAH,GAAA,aAAAM,EAAAN,GAAAP,EAAAL,EAAAC,EAAA,QANAc,EAAAH,GAAAM,EAAAN,GAAAP,EAAAL,EAAAC,EAAA,WA9HA,GAAA4B,IACAG,UACA9B,KACA+B,QAAA,eACAC,KAAA,gBACAC,OAAA,gBAEAhC,SACA8B,QAAA,yBACAC,KAAA,2BACAC,OAAA,0BAEA/B,OACA6B,QAAA,wBACAC,KAAA,2BACAC,OAAA,0BAIAC,aACAhC,OACA6B,QAAA,kBACAC,KAAA,mBACAC,OAAA,oBAIAE,UACAnC,KACA+B,QAAA,SACAC,KAAA,UACAC,OAAA,UAEAhC,SACA8B,QAAA,mBACAC,KAAA,qBACAC,OAAA,oBAEA/B,OACA6B,QAAA,kBACAC,KAAA,qBACAC,OAAA,oBAIAG,QACApC,KACA+B,QAAA,SACAC,KAAA,UACAC,OAAA,UAEAhC,SACA8B,QAAA,mBACAC,KAAA,qBACAC,OAAA,oBAEA/B,OACA6B,QAAA,kBACAC,KAAA,qBACAC,OAAA,oBAIAI,OACArC,KACA+B,QAAA,MACAC,KAAA,OACAC,OAAA,OAEAhC,SACA8B,QAAA,gBACAC,KAAA,gBACAC,OAAA,iBAEA/B,OACA6B,QAAA,mBACAC,KAAA,gBACAC,OAAA,qBAIAK,SACAtC,KACA+B,QAAA,gBACAC,KAAA,kBACAC,OAAA,iBAEAhC,SACA8B,QAAA,2BACAC,KAAA,2BACAC,OAAA,4BAEA/B,OACA6B,QAAA,gCACAC,KAAA,2BACAC,OAAA,kCAIAM,QACAvC,KACA+B,QAAA,MACAC,KAAA,QACAC,OAAA,OAEAhC,SACA8B,QAAA,iBACAC,KAAA,iBACAC,OAAA,kBAEA/B,OACA6B,QAAA,sBACAC,KAAA,iBACAC,OAAA,wBAuBA,QACAV,YAIA5B,EAAAC,QAAA0B","file":"static/js/92.e80c89e7.chunk.js","sourcesContent":["webpackJsonp([92],{\n\n/***/ 508:\n/***/ (function(module, exports) {\n\nfunction declensionGroup (scheme, count) {\n  if (count === 1) {\n    return scheme.one\n  }\n\n  if (count >= 2 && count <= 4) {\n    return scheme.twoFour\n  }\n\n  // if count === null || count === 0 || count >= 5\n  return scheme.other\n}\n\nfunction declension (scheme, count, time) {\n  var group = declensionGroup(scheme, count)\n  var finalText = group[time] || group\n  return finalText.replace('{{count}}', count)\n}\n\nfunction extractPreposition (token) {\n  var result = ['lessThan', 'about', 'over', 'almost'].filter(function (preposition) {\n    return !!token.match(new RegExp('^' + preposition))\n  })\n\n  return result[0]\n}\n\nfunction prefixPreposition (preposition) {\n  var translation = ''\n\n  if (preposition === 'almost') {\n    translation = 'skoro'\n  }\n\n  if (preposition === 'about') {\n    translation = 'přibližně'\n  }\n\n  return translation.length > 0 ? translation + ' ' : ''\n}\n\nfunction suffixPreposition (preposition) {\n  var translation = ''\n\n  if (preposition === 'lessThan') {\n    translation = 'méně než'\n  }\n\n  if (preposition === 'over') {\n    translation = 'více než'\n  }\n\n  return translation.length > 0 ? translation + ' ' : ''\n}\n\nfunction lowercaseFirstLetter (string) {\n  return string.charAt(0).toLowerCase() + string.slice(1)\n}\n\nfunction buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    xSeconds: {\n      one: {\n        regular: 'vteřina',\n        past: 'vteřinou',\n        future: 'vteřinu'\n      },\n      twoFour: {\n        regular: '{{count}} vteřiny',\n        past: '{{count}} vteřinami',\n        future: '{{count}} vteřiny'\n      },\n      other: {\n        regular: '{{count}} vteřin',\n        past: '{{count}} vteřinami',\n        future: '{{count}} vteřin'\n      }\n    },\n\n    halfAMinute: {\n      other: {\n        regular: 'půl minuty',\n        past: 'půl minutou',\n        future: 'půl minuty'\n      }\n    },\n\n    xMinutes: {\n      one: {\n        regular: 'minuta',\n        past: 'minutou',\n        future: 'minutu'\n      },\n      twoFour: {\n        regular: '{{count}} minuty',\n        past: '{{count}} minutami',\n        future: '{{count}} minuty'\n      },\n      other: {\n        regular: '{{count}} minut',\n        past: '{{count}} minutami',\n        future: '{{count}} minut'\n      }\n    },\n\n    xHours: {\n      one: {\n        regular: 'hodina',\n        past: 'hodinou',\n        future: 'hodinu'\n      },\n      twoFour: {\n        regular: '{{count}} hodiny',\n        past: '{{count}} hodinami',\n        future: '{{count}} hodiny'\n      },\n      other: {\n        regular: '{{count}} hodin',\n        past: '{{count}} hodinami',\n        future: '{{count}} hodin'\n      }\n    },\n\n    xDays: {\n      one: {\n        regular: 'den',\n        past: 'dnem',\n        future: 'den'\n      },\n      twoFour: {\n        regular: '{{count}} dni',\n        past: '{{count}} dny',\n        future: '{{count}} dni'\n      },\n      other: {\n        regular: '{{count}} dní',\n        past: '{{count}} dny',\n        future: '{{count}} dní'\n      }\n    },\n\n    xMonths: {\n      one: {\n        regular: 'měsíc',\n        past: 'měsícem',\n        future: 'měsíc'\n      },\n      twoFour: {\n        regular: '{{count}} měsíce',\n        past: '{{count}} měsíci',\n        future: '{{count}} měsíce'\n      },\n      other: {\n        regular: '{{count}} měsíců',\n        past: '{{count}} měsíci',\n        future: '{{count}} měsíců'\n      }\n    },\n\n    xYears: {\n      one: {\n        regular: 'rok',\n        past: 'rokem',\n        future: 'rok'\n      },\n      twoFour: {\n        regular: '{{count}} roky',\n        past: '{{count}} roky',\n        future: '{{count}} roky'\n      },\n      other: {\n        regular: '{{count}} roků',\n        past: '{{count}} roky',\n        future: '{{count}} roků'\n      }\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var preposition = extractPreposition(token) || ''\n    var key = lowercaseFirstLetter(token.substring(preposition.length))\n    var scheme = distanceInWordsLocale[key]\n\n    if (!options.addSuffix) {\n      return prefixPreposition(preposition) + suffixPreposition(preposition) + declension(scheme, count, 'regular')\n    }\n\n    if (options.comparison > 0) {\n      return prefixPreposition(preposition) + 'za ' + suffixPreposition(preposition) + declension(scheme, count, 'future')\n    } else {\n      return prefixPreposition(preposition) + 'před ' + suffixPreposition(preposition) + declension(scheme, count, 'past')\n    }\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/92.e80c89e7.chunk.js","function declensionGroup (scheme, count) {\n  if (count === 1) {\n    return scheme.one\n  }\n\n  if (count >= 2 && count <= 4) {\n    return scheme.twoFour\n  }\n\n  // if count === null || count === 0 || count >= 5\n  return scheme.other\n}\n\nfunction declension (scheme, count, time) {\n  var group = declensionGroup(scheme, count)\n  var finalText = group[time] || group\n  return finalText.replace('{{count}}', count)\n}\n\nfunction extractPreposition (token) {\n  var result = ['lessThan', 'about', 'over', 'almost'].filter(function (preposition) {\n    return !!token.match(new RegExp('^' + preposition))\n  })\n\n  return result[0]\n}\n\nfunction prefixPreposition (preposition) {\n  var translation = ''\n\n  if (preposition === 'almost') {\n    translation = 'skoro'\n  }\n\n  if (preposition === 'about') {\n    translation = 'přibližně'\n  }\n\n  return translation.length > 0 ? translation + ' ' : ''\n}\n\nfunction suffixPreposition (preposition) {\n  var translation = ''\n\n  if (preposition === 'lessThan') {\n    translation = 'méně než'\n  }\n\n  if (preposition === 'over') {\n    translation = 'více než'\n  }\n\n  return translation.length > 0 ? translation + ' ' : ''\n}\n\nfunction lowercaseFirstLetter (string) {\n  return string.charAt(0).toLowerCase() + string.slice(1)\n}\n\nfunction buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    xSeconds: {\n      one: {\n        regular: 'vteřina',\n        past: 'vteřinou',\n        future: 'vteřinu'\n      },\n      twoFour: {\n        regular: '{{count}} vteřiny',\n        past: '{{count}} vteřinami',\n        future: '{{count}} vteřiny'\n      },\n      other: {\n        regular: '{{count}} vteřin',\n        past: '{{count}} vteřinami',\n        future: '{{count}} vteřin'\n      }\n    },\n\n    halfAMinute: {\n      other: {\n        regular: 'půl minuty',\n        past: 'půl minutou',\n        future: 'půl minuty'\n      }\n    },\n\n    xMinutes: {\n      one: {\n        regular: 'minuta',\n        past: 'minutou',\n        future: 'minutu'\n      },\n      twoFour: {\n        regular: '{{count}} minuty',\n        past: '{{count}} minutami',\n        future: '{{count}} minuty'\n      },\n      other: {\n        regular: '{{count}} minut',\n        past: '{{count}} minutami',\n        future: '{{count}} minut'\n      }\n    },\n\n    xHours: {\n      one: {\n        regular: 'hodina',\n        past: 'hodinou',\n        future: 'hodinu'\n      },\n      twoFour: {\n        regular: '{{count}} hodiny',\n        past: '{{count}} hodinami',\n        future: '{{count}} hodiny'\n      },\n      other: {\n        regular: '{{count}} hodin',\n        past: '{{count}} hodinami',\n        future: '{{count}} hodin'\n      }\n    },\n\n    xDays: {\n      one: {\n        regular: 'den',\n        past: 'dnem',\n        future: 'den'\n      },\n      twoFour: {\n        regular: '{{count}} dni',\n        past: '{{count}} dny',\n        future: '{{count}} dni'\n      },\n      other: {\n        regular: '{{count}} dní',\n        past: '{{count}} dny',\n        future: '{{count}} dní'\n      }\n    },\n\n    xMonths: {\n      one: {\n        regular: 'měsíc',\n        past: 'měsícem',\n        future: 'měsíc'\n      },\n      twoFour: {\n        regular: '{{count}} měsíce',\n        past: '{{count}} měsíci',\n        future: '{{count}} měsíce'\n      },\n      other: {\n        regular: '{{count}} měsíců',\n        past: '{{count}} měsíci',\n        future: '{{count}} měsíců'\n      }\n    },\n\n    xYears: {\n      one: {\n        regular: 'rok',\n        past: 'rokem',\n        future: 'rok'\n      },\n      twoFour: {\n        regular: '{{count}} roky',\n        past: '{{count}} roky',\n        future: '{{count}} roky'\n      },\n      other: {\n        regular: '{{count}} roků',\n        past: '{{count}} roky',\n        future: '{{count}} roků'\n      }\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var preposition = extractPreposition(token) || ''\n    var key = lowercaseFirstLetter(token.substring(preposition.length))\n    var scheme = distanceInWordsLocale[key]\n\n    if (!options.addSuffix) {\n      return prefixPreposition(preposition) + suffixPreposition(preposition) + declension(scheme, count, 'regular')\n    }\n\n    if (options.comparison > 0) {\n      return prefixPreposition(preposition) + 'za ' + suffixPreposition(preposition) + declension(scheme, count, 'future')\n    } else {\n      return prefixPreposition(preposition) + 'před ' + suffixPreposition(preposition) + declension(scheme, count, 'past')\n    }\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/locale/cs/build_distance_in_words_locale/index.js\n// module id = 508\n// module chunks = 29 92"],"sourceRoot":""}