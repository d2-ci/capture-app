{"version":3,"sources":["../static/js/54.78b3bea0.chunk.js","../node_modules/date-fns/locale/pl/build_distance_in_words_locale/index.js"],"names":["webpackJsonp","545","module","exports","declensionGroup","scheme","count","one","rem100","other","rem10","twoFour","declension","time","group","replace","buildDistanceInWordsLocale","localize","token","options","distanceInWordsLocale","addSuffix","comparison","lessThanXSeconds","regular","past","future","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears"],"mappings":"AAAAA,cAAc,KAERC,IACA,SAAUC,EAAQC,GCHxB,QAAAC,GAAAC,EAAAC,GACA,OAAAA,EACA,MAAAD,GAAAE,GAGA,IAAAC,GAAAF,EAAA,GAGA,IAAAE,GAAA,IAAAA,EAAA,GACA,MAAAH,GAAAI,KAGA,IAAAC,GAAAF,EAAA,EAGA,OAAAE,IAAA,GAAAA,GAAA,EACAL,EAAAM,QAGAN,EAAAI,MAGA,QAAAG,GAAAP,EAAAC,EAAAO,GACAA,KAAA,SACA,IAAAC,GAAAV,EAAAC,EAAAC,EAEA,QADAQ,EAAAD,IAAAC,GACAC,QAAA,YAAqCT,GAGrC,QAAAU,KAmHA,QAAAC,GAAAC,EAAAZ,EAAAa,GACAA,OAEA,IAAAd,GAAAe,EAAAF,EACA,OAAAC,GAAAE,UAIAF,EAAAG,WAAA,EACA,MAAAV,EAAAP,EAAAC,EAAA,UAEAM,EAAAP,EAAAC,EAAA,gBANAM,EAAAP,EAAAC,GAvHA,GAAAc,IACAG,kBACAhB,KACAiB,QAAA,yBACAC,KAAA,8BACAC,OAAA,+BAEAf,QAAA,mCACAF,MAAA,mCAGAkB,UACApB,KACAiB,QAAA,UACAC,KAAA,eACAC,OAAA,gBAEAf,QAAA,oBACAF,MAAA,oBAGAmB,aACArB,IAAA,qBACAI,QAAA,qBACAF,MAAA,sBAGAoB,kBACAtB,KACAiB,QAAA,wBACAC,KAAA,6BACAC,OAAA,8BAEAf,QAAA,kCACAF,MAAA,kCAGAqB,UACAvB,KACAiB,QAAA,SACAC,KAAA,cACAC,OAAA,eAEAf,QAAA,mBACAF,MAAA,mBAGAsB,aACAxB,KACAiB,QAAA,qBACAC,KAAA,qBACAC,OAAA,2BAEAf,QAAA,+BACAF,MAAA,+BAGAuB,QACAzB,KACAiB,QAAA,UACAC,KAAA,eACAC,OAAA,gBAEAf,QAAA,oBACAF,MAAA,oBAGAwB,OACA1B,KACAiB,QAAA,aACAC,KAAA,aACAC,OAAA,gBAEAf,QAAA,gBACAF,MAAA,iBAGAyB,cACA3B,IAAA,0BACAI,QAAA,qCACAF,MAAA,sCAGA0B,SACA5B,IAAA,eACAI,QAAA,0BACAF,MAAA,2BAGA2B,aACA7B,IAAA,iBACAI,QAAA,4BACAF,MAAA,4BAGA4B,QACA9B,IAAA,MACAI,QAAA,iBACAF,MAAA,iBAGA6B,YACA/B,IAAA,YACAI,QAAA,uBACAF,MAAA,uBAGA8B,cACAhC,IAAA,aACAI,QAAA,wBACAF,MAAA,wBAmBA,QACAQ,YAIAf,EAAAC,QAAAa","file":"static/js/54.78b3bea0.chunk.js","sourcesContent":["webpackJsonp([54],{\n\n/***/ 545:\n/***/ (function(module, exports) {\n\nfunction declensionGroup (scheme, count) {\n  if (count === 1) {\n    return scheme.one\n  }\n\n  var rem100 = count % 100\n\n  // ends with 11-20\n  if (rem100 <= 20 && rem100 > 10) {\n    return scheme.other\n  }\n\n  var rem10 = rem100 % 10\n\n  // ends with 2, 3, 4\n  if (rem10 >= 2 && rem10 <= 4) {\n    return scheme.twoFour\n  }\n\n  return scheme.other\n}\n\nfunction declension (scheme, count, time) {\n  time = time || 'regular'\n  var group = declensionGroup(scheme, count)\n  var finalText = group[time] || group\n  return finalText.replace('{{count}}', count)\n}\n\nfunction buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: {\n        regular: 'mniej niż sekunda',\n        past: 'mniej niż sekundę',\n        future: 'mniej niż sekundę'\n      },\n      twoFour: 'mniej niż {{count}} sekundy',\n      other: 'mniej niż {{count}} sekund'\n    },\n\n    xSeconds: {\n      one: {\n        regular: 'sekunda',\n        past: 'sekundę',\n        future: 'sekundę'\n      },\n      twoFour: '{{count}} sekundy',\n      other: '{{count}} sekund'\n    },\n\n    halfAMinute: {\n      one: 'pół minuty',\n      twoFour: 'pół minuty',\n      other: 'pół minuty'\n    },\n\n    lessThanXMinutes: {\n      one: {\n        regular: 'mniej niż minuta',\n        past: 'mniej niż minutę',\n        future: 'mniej niż minutę'\n      },\n      twoFour: 'mniej niż {{count}} minuty',\n      other: 'mniej niż {{count}} minut'\n    },\n\n    xMinutes: {\n      one: {\n        regular: 'minuta',\n        past: 'minutę',\n        future: 'minutę'\n      },\n      twoFour: '{{count}} minuty',\n      other: '{{count}} minut'\n    },\n\n    aboutXHours: {\n      one: {\n        regular: 'około godzina',\n        past: 'około godziny',\n        future: 'około godzinę'\n      },\n      twoFour: 'około {{count}} godziny',\n      other: 'około {{count}} godzin'\n    },\n\n    xHours: {\n      one: {\n        regular: 'godzina',\n        past: 'godzinę',\n        future: 'godzinę'\n      },\n      twoFour: '{{count}} godziny',\n      other: '{{count}} godzin'\n    },\n\n    xDays: {\n      one: {\n        regular: 'dzień',\n        past: 'dzień',\n        future: '1 dzień'\n      },\n      twoFour: '{{count}} dni',\n      other: '{{count}} dni'\n    },\n\n    aboutXMonths: {\n      one: 'około miesiąc',\n      twoFour: 'około {{count}} miesiące',\n      other: 'około {{count}} miesięcy'\n    },\n\n    xMonths: {\n      one: 'miesiąc',\n      twoFour: '{{count}} miesiące',\n      other: '{{count}} miesięcy'\n    },\n\n    aboutXYears: {\n      one: 'około rok',\n      twoFour: 'około {{count}} lata',\n      other: 'około {{count}} lat'\n    },\n\n    xYears: {\n      one: 'rok',\n      twoFour: '{{count}} lata',\n      other: '{{count}} lat'\n    },\n\n    overXYears: {\n      one: 'ponad rok',\n      twoFour: 'ponad {{count}} lata',\n      other: 'ponad {{count}} lat'\n    },\n\n    almostXYears: {\n      one: 'prawie rok',\n      twoFour: 'prawie {{count}} lata',\n      other: 'prawie {{count}} lat'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var scheme = distanceInWordsLocale[token]\n    if (!options.addSuffix) {\n      return declension(scheme, count)\n    }\n\n    if (options.comparison > 0) {\n      return 'za ' + declension(scheme, count, 'future')\n    } else {\n      return declension(scheme, count, 'past') + ' temu'\n    }\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/54.78b3bea0.chunk.js","function declensionGroup (scheme, count) {\n  if (count === 1) {\n    return scheme.one\n  }\n\n  var rem100 = count % 100\n\n  // ends with 11-20\n  if (rem100 <= 20 && rem100 > 10) {\n    return scheme.other\n  }\n\n  var rem10 = rem100 % 10\n\n  // ends with 2, 3, 4\n  if (rem10 >= 2 && rem10 <= 4) {\n    return scheme.twoFour\n  }\n\n  return scheme.other\n}\n\nfunction declension (scheme, count, time) {\n  time = time || 'regular'\n  var group = declensionGroup(scheme, count)\n  var finalText = group[time] || group\n  return finalText.replace('{{count}}', count)\n}\n\nfunction buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: {\n        regular: 'mniej niż sekunda',\n        past: 'mniej niż sekundę',\n        future: 'mniej niż sekundę'\n      },\n      twoFour: 'mniej niż {{count}} sekundy',\n      other: 'mniej niż {{count}} sekund'\n    },\n\n    xSeconds: {\n      one: {\n        regular: 'sekunda',\n        past: 'sekundę',\n        future: 'sekundę'\n      },\n      twoFour: '{{count}} sekundy',\n      other: '{{count}} sekund'\n    },\n\n    halfAMinute: {\n      one: 'pół minuty',\n      twoFour: 'pół minuty',\n      other: 'pół minuty'\n    },\n\n    lessThanXMinutes: {\n      one: {\n        regular: 'mniej niż minuta',\n        past: 'mniej niż minutę',\n        future: 'mniej niż minutę'\n      },\n      twoFour: 'mniej niż {{count}} minuty',\n      other: 'mniej niż {{count}} minut'\n    },\n\n    xMinutes: {\n      one: {\n        regular: 'minuta',\n        past: 'minutę',\n        future: 'minutę'\n      },\n      twoFour: '{{count}} minuty',\n      other: '{{count}} minut'\n    },\n\n    aboutXHours: {\n      one: {\n        regular: 'około godzina',\n        past: 'około godziny',\n        future: 'około godzinę'\n      },\n      twoFour: 'około {{count}} godziny',\n      other: 'około {{count}} godzin'\n    },\n\n    xHours: {\n      one: {\n        regular: 'godzina',\n        past: 'godzinę',\n        future: 'godzinę'\n      },\n      twoFour: '{{count}} godziny',\n      other: '{{count}} godzin'\n    },\n\n    xDays: {\n      one: {\n        regular: 'dzień',\n        past: 'dzień',\n        future: '1 dzień'\n      },\n      twoFour: '{{count}} dni',\n      other: '{{count}} dni'\n    },\n\n    aboutXMonths: {\n      one: 'około miesiąc',\n      twoFour: 'około {{count}} miesiące',\n      other: 'około {{count}} miesięcy'\n    },\n\n    xMonths: {\n      one: 'miesiąc',\n      twoFour: '{{count}} miesiące',\n      other: '{{count}} miesięcy'\n    },\n\n    aboutXYears: {\n      one: 'około rok',\n      twoFour: 'około {{count}} lata',\n      other: 'około {{count}} lat'\n    },\n\n    xYears: {\n      one: 'rok',\n      twoFour: '{{count}} lata',\n      other: '{{count}} lat'\n    },\n\n    overXYears: {\n      one: 'ponad rok',\n      twoFour: 'ponad {{count}} lata',\n      other: 'ponad {{count}} lat'\n    },\n\n    almostXYears: {\n      one: 'prawie rok',\n      twoFour: 'prawie {{count}} lata',\n      other: 'prawie {{count}} lat'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var scheme = distanceInWordsLocale[token]\n    if (!options.addSuffix) {\n      return declension(scheme, count)\n    }\n\n    if (options.comparison > 0) {\n      return 'za ' + declension(scheme, count, 'future')\n    } else {\n      return declension(scheme, count, 'past') + ' temu'\n    }\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/locale/pl/build_distance_in_words_locale/index.js\n// module id = 545\n// module chunks = 10 54"],"sourceRoot":""}