{"version":3,"sources":["../static/js/80.f12dc3cd.chunk.js","../node_modules/date-fns/locale/fi/build_distance_in_words_locale/index.js"],"names":["webpackJsonp","520","module","exports","buildDistanceInWordsLocale","futureSeconds","text","replace","futureMinutes","futureHours","futureDays","futureMonths","futureYears","localize","token","count","options","distance","distanceInWordsLocale","result","one","other","addSuffix","comparison","futureTense","lessThanXSeconds","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears"],"mappings":"AAAAA,cAAc,KAERC,IACA,SAAUC,EAAQC,GCHxB,QAAAC,KACA,QAAAC,GAAAC,GACA,MAAAA,GAAAC,QAAA,wBAGA,QAAAC,GAAAF,GACA,MAAAA,GAAAC,QAAA,yBAGA,QAAAE,GAAAH,GACA,MAAAA,GAAAC,QAAA,oBAGA,QAAAG,GAAAJ,GACA,MAAAA,GAAAC,QAAA,mCAGA,QAAAI,GAAAL,GACA,MAAAA,GAAAC,QAAA,oCAGA,QAAAK,GAAAN,GACA,MAAAA,GAAAC,QAAA,2BA2FA,QAAAM,GAAAC,EAAAC,EAAAC,GACAA,OAEA,IAAAC,GAAAC,EAAAJ,GACAK,EAAA,IAAAJ,EAAAE,EAAAG,IAAAH,EAAAI,MAAAd,QAAA,YAA+EQ,EAE/E,OAAAC,GAAAM,UACAN,EAAAO,WAAA,EACAN,EAAAO,YAAAL,GAAA,YAEAA,EAAA,UAIAA,EAtGA,GAAAD,IACAO,kBACAL,IAAA,eACAC,MAAA,0BACAG,YAAAnB,GAGAqB,UACAN,IAAA,UACAC,MAAA,qBACAG,YAAAnB,GAGAsB,aACAP,IAAA,kBACAC,MAAA,kBACAG,YAAA,SAAAlB,GACA,0BAIAsB,kBACAR,IAAA,gBACAC,MAAA,2BACAG,YAAAhB,GAGAqB,UACAT,IAAA,WACAC,MAAA,sBACAG,YAAAhB,GAGAsB,aACAV,IAAA,aACAC,MAAA,wBACAG,YAAAf,GAGAsB,QACAX,IAAA,QACAC,MAAA,mBACAG,YAAAf,GAGAuB,OACAZ,IAAA,cACAC,MAAA,4BACAG,YAAAd,GAGAuB,cACAb,IAAA,gBACAC,MAAA,2BACAG,YAAAb,GAGAuB,SACAd,IAAA,WACAC,MAAA,sBACAG,YAAAb,GAGAwB,aACAf,IAAA,aACAC,MAAA,wBACAG,YAAAZ,GAGAwB,QACAhB,IAAA,QACAC,MAAA,mBACAG,YAAAZ,GAGAyB,YACAjB,IAAA,YACAC,MAAA,uBACAG,YAAAZ,GAGA0B,cACAlB,IAAA,iBACAC,MAAA,4BACAG,YAAAZ,GAqBA,QACAC,YAIAX,EAAAC,QAAAC","file":"static/js/80.f12dc3cd.chunk.js","sourcesContent":["webpackJsonp([80],{\n\n/***/ 520:\n/***/ (function(module, exports) {\n\nfunction buildDistanceInWordsLocale () {\n  function futureSeconds (text) {\n    return text.replace(/sekuntia?/, 'sekunnin')\n  }\n\n  function futureMinutes (text) {\n    return text.replace(/minuuttia?/, 'minuutin')\n  }\n\n  function futureHours (text) {\n    return text.replace(/tuntia?/, 'tunnin')\n  }\n\n  function futureDays (text) {\n    return text.replace(/päivää?/, 'päivän')\n  }\n\n  function futureMonths (text) {\n    return text.replace(/(kuukausi|kuukautta)/, 'kuukauden')\n  }\n\n  function futureYears (text) {\n    return text.replace(/(vuosi|vuotta)/, 'vuoden')\n  }\n\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'alle sekunti',\n      other: 'alle {{count}} sekuntia',\n      futureTense: futureSeconds\n    },\n\n    xSeconds: {\n      one: 'sekunti',\n      other: '{{count}} sekuntia',\n      futureTense: futureSeconds\n    },\n\n    halfAMinute: {\n      one: 'puoli minuuttia',\n      other: 'puoli minuuttia',\n      futureTense: function (text) {\n        return 'puolen minuutin'\n      }\n    },\n\n    lessThanXMinutes: {\n      one: 'alle minuutti',\n      other: 'alle {{count}} minuuttia',\n      futureTense: futureMinutes\n    },\n\n    xMinutes: {\n      one: 'minuutti',\n      other: '{{count}} minuuttia',\n      futureTense: futureMinutes\n    },\n\n    aboutXHours: {\n      one: 'noin tunti',\n      other: 'noin {{count}} tuntia',\n      futureTense: futureHours\n    },\n\n    xHours: {\n      one: 'tunti',\n      other: '{{count}} tuntia',\n      futureTense: futureHours\n    },\n\n    xDays: {\n      one: 'päivä',\n      other: '{{count}} päivää',\n      futureTense: futureDays\n    },\n\n    aboutXMonths: {\n      one: 'noin kuukausi',\n      other: 'noin {{count}} kuukautta',\n      futureTense: futureMonths\n    },\n\n    xMonths: {\n      one: 'kuukausi',\n      other: '{{count}} kuukautta',\n      futureTense: futureMonths\n    },\n\n    aboutXYears: {\n      one: 'noin vuosi',\n      other: 'noin {{count}} vuotta',\n      futureTense: futureYears\n    },\n\n    xYears: {\n      one: 'vuosi',\n      other: '{{count}} vuotta',\n      futureTense: futureYears\n    },\n\n    overXYears: {\n      one: 'yli vuosi',\n      other: 'yli {{count}} vuotta',\n      futureTense: futureYears\n    },\n\n    almostXYears: {\n      one: 'lähes vuosi',\n      other: 'lähes {{count}} vuotta',\n      futureTense: futureYears\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var distance = distanceInWordsLocale[token]\n    var result = count === 1 ? distance.one : distance.other.replace('{{count}}', count)\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return distance.futureTense(result) + ' kuluttua'\n      } else {\n        return result + ' sitten'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/80.f12dc3cd.chunk.js","function buildDistanceInWordsLocale () {\n  function futureSeconds (text) {\n    return text.replace(/sekuntia?/, 'sekunnin')\n  }\n\n  function futureMinutes (text) {\n    return text.replace(/minuuttia?/, 'minuutin')\n  }\n\n  function futureHours (text) {\n    return text.replace(/tuntia?/, 'tunnin')\n  }\n\n  function futureDays (text) {\n    return text.replace(/päivää?/, 'päivän')\n  }\n\n  function futureMonths (text) {\n    return text.replace(/(kuukausi|kuukautta)/, 'kuukauden')\n  }\n\n  function futureYears (text) {\n    return text.replace(/(vuosi|vuotta)/, 'vuoden')\n  }\n\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'alle sekunti',\n      other: 'alle {{count}} sekuntia',\n      futureTense: futureSeconds\n    },\n\n    xSeconds: {\n      one: 'sekunti',\n      other: '{{count}} sekuntia',\n      futureTense: futureSeconds\n    },\n\n    halfAMinute: {\n      one: 'puoli minuuttia',\n      other: 'puoli minuuttia',\n      futureTense: function (text) {\n        return 'puolen minuutin'\n      }\n    },\n\n    lessThanXMinutes: {\n      one: 'alle minuutti',\n      other: 'alle {{count}} minuuttia',\n      futureTense: futureMinutes\n    },\n\n    xMinutes: {\n      one: 'minuutti',\n      other: '{{count}} minuuttia',\n      futureTense: futureMinutes\n    },\n\n    aboutXHours: {\n      one: 'noin tunti',\n      other: 'noin {{count}} tuntia',\n      futureTense: futureHours\n    },\n\n    xHours: {\n      one: 'tunti',\n      other: '{{count}} tuntia',\n      futureTense: futureHours\n    },\n\n    xDays: {\n      one: 'päivä',\n      other: '{{count}} päivää',\n      futureTense: futureDays\n    },\n\n    aboutXMonths: {\n      one: 'noin kuukausi',\n      other: 'noin {{count}} kuukautta',\n      futureTense: futureMonths\n    },\n\n    xMonths: {\n      one: 'kuukausi',\n      other: '{{count}} kuukautta',\n      futureTense: futureMonths\n    },\n\n    aboutXYears: {\n      one: 'noin vuosi',\n      other: 'noin {{count}} vuotta',\n      futureTense: futureYears\n    },\n\n    xYears: {\n      one: 'vuosi',\n      other: '{{count}} vuotta',\n      futureTense: futureYears\n    },\n\n    overXYears: {\n      one: 'yli vuosi',\n      other: 'yli {{count}} vuotta',\n      futureTense: futureYears\n    },\n\n    almostXYears: {\n      one: 'lähes vuosi',\n      other: 'lähes {{count}} vuotta',\n      futureTense: futureYears\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var distance = distanceInWordsLocale[token]\n    var result = count === 1 ? distance.one : distance.other.replace('{{count}}', count)\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return distance.futureTense(result) + ' kuluttua'\n      } else {\n        return result + ' sitten'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/locale/fi/build_distance_in_words_locale/index.js\n// module id = 520\n// module chunks = 23 80"],"sourceRoot":""}