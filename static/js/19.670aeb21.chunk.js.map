{"version":3,"sources":["../static/js/19.670aeb21.chunk.js","../node_modules/date-fns/locale/hu/build_distance_in_words_locale/index.js","../node_modules/date-fns/locale/hu/build_format_locale/index.js","../node_modules/date-fns/locale/hu/index.js"],"names":["webpackJsonp","515","module","exports","buildDistanceInWordsLocale","localize","token","count","options","result","distanceInWordsLocale","one","other","replace","addSuffix","comparison","lessThanXSeconds","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","516","__webpack_require__","buildFormatLocale","months3char","monthsFull","weekdays2char","weekdays3char","weekdaysFull","meridiemUppercase","meridiemLowercase","meridiemFull","formatters","MMM","date","getMonth","MMMM","dd","getDay","ddd","dddd","A","getHours","a","aa","forEach","formatterToken","ordinal","formattingTokensRegExp","buildFormattingTokensRegExp","number","rem100","568","distanceInWords","format"],"mappings":"AAAAA,cAAc,GAAG,GAAG,KAEdC,IACA,SAAUC,EAAQC,GCHxB,QAAAC,KAsEA,QAAAC,GAAAC,EAAAC,EAAAC,GACAA,OAEA,IAAAC,EASA,OAPAA,GADA,iBAAAC,GAAAJ,GACAI,EAAAJ,GACK,IAAAC,EACLG,EAAAJ,GAAAK,IAEAD,EAAAJ,GAAAM,MAAAC,QAAA,YAAoEN,GAGpEC,EAAAM,UACAN,EAAAO,WAAA,EACA,GAAAN,EAEAA,EAAA,GAIAA,EAzFA,GAAAC,IACAM,kBACAL,IAAA,mCACAC,MAAA,0CAGAK,UACAN,IAAA,kBACAC,MAAA,2BAGAM,YAAA,eAEAC,kBACAR,IAAA,2BACAC,MAAA,kCAGAQ,UACAT,IAAA,UACAC,MAAA,mBAGAS,aACAV,IAAA,yBACAC,MAAA,kCAGAU,QACAX,IAAA,gBACAC,MAAA,yBAGAW,OACAZ,IAAA,UACAC,MAAA,mBAGAY,cACAb,IAAA,wBACAC,MAAA,iCAGAa,SACAd,IAAA,eACAC,MAAA,wBAGAc,aACAf,IAAA,oBACAC,MAAA,6BAGAe,QACAhB,IAAA,WACAC,MAAA,oBAGAgB,YACAjB,IAAA,yBACAC,MAAA,kCAGAiB,cACAlB,IAAA,mBACAC,MAAA,4BA2BA,QACAP,YAIAH,EAAAC,QAAAC,GDUM0B,IACA,SAAU5B,EAAQC,EAAS4B,GE3GjC,QAAAC,KAKA,GAAAC,IAAA,wFACAC,GAAA,mJACAC,GAAA,4CACAC,GAAA,oDACAC,GAAA,0FACAC,GAAA,WACAC,GAAA,WACAC,GAAA,oCAEAC,GAEAC,IAAA,SAAAC,GACA,MAAAV,GAAAU,EAAAC,aAIAC,KAAA,SAAAF,GACA,MAAAT,GAAAS,EAAAC,aAIAE,GAAA,SAAAH,GACA,MAAAR,GAAAQ,EAAAI,WAIAC,IAAA,SAAAL,GACA,MAAAP,GAAAO,EAAAI,WAIAE,KAAA,SAAAN,GACA,MAAAN,GAAAM,EAAAI,WAIAG,EAAA,SAAAP,GACA,MAAAA,GAAAQ,WAAA,MAAAb,EAAA,GAAAA,EAAA,IAIAc,EAAA,SAAAT,GACA,MAAAA,GAAAQ,WAAA,MAAAZ,EAAA,GAAAA,EAAA,IAIAc,GAAA,SAAAV,GACA,MAAAA,GAAAQ,WAAA,MAAAX,EAAA,GAAAA,EAAA,IAYA,QAPA,2BACAc,QAAA,SAAAC,GACAd,EAAAc,EAAA,cAAAZ,EAAAF,GACA,MAAAe,GAAAf,EAAAc,GAAAZ,QAKAF,aACAgB,uBAAAC,EAAAjB,IAIA,QAAAe,GAAAG,GACA,GAAAC,GAAAD,EAAA,GACA,IAAAC,EAAA,IAAAA,EAAA,GACA,OAAAA,EAAA,IACA,OACA,MAAAD,GAAA,IACA,QACA,MAAAA,GAAA,IACA,QACA,MAAAA,GAAA,KAGA,MAAAA,GAAA,KApFA,GAAAD,GAAA3B,EAAA,IAuFA7B,GAAAC,QAAA6B,GFoHM6B,IACA,SAAU3D,EAAQC,EAAS4B,GG5MjC,GAAA3B,GAAA2B,EAAA,KACAC,EAAAD,EAAA,IAMA7B,GAAAC,SACA2D,gBAAA1D,IACA2D,OAAA/B","file":"static/js/19.670aeb21.chunk.js","sourcesContent":["webpackJsonp([19,71,72],{\n\n/***/ 515:\n/***/ (function(module, exports) {\n\nfunction buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'kevesebb, mint egy másodperce',\n      other: 'kevesebb, mint {{count}} másodperce'\n    },\n\n    xSeconds: {\n      one: '1 másodperce',\n      other: '{{count}} másodperce'\n    },\n\n    halfAMinute: 'fél perce',\n\n    lessThanXMinutes: {\n      one: 'kevesebb, mint egy perce',\n      other: 'kevesebb, mint {{count}} perce'\n    },\n\n    xMinutes: {\n      one: '1 perce',\n      other: '{{count}} perce'\n    },\n\n    aboutXHours: {\n      one: 'közel 1 órája',\n      other: 'közel {{count}} órája'\n    },\n\n    xHours: {\n      one: '1 órája',\n      other: '{{count}} órája'\n    },\n\n    xDays: {\n      one: '1 napja',\n      other: '{{count}} napja'\n    },\n\n    aboutXMonths: {\n      one: 'közel 1 hónapja',\n      other: 'közel {{count}} hónapja'\n    },\n\n    xMonths: {\n      one: '1 hónapja',\n      other: '{{count}} hónapja'\n    },\n\n    aboutXYears: {\n      one: 'közel 1 éve',\n      other: 'közel {{count}} éve'\n    },\n\n    xYears: {\n      one: '1 éve',\n      other: '{{count}} éve'\n    },\n\n    overXYears: {\n      one: 'több, mint 1 éve',\n      other: 'több, mint {{count}} éve'\n    },\n\n    almostXYears: {\n      one: 'majdnem 1 éve',\n      other: 'majdnem {{count}} éve'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return '' + result\n      } else {\n        return result + ''\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n\n\n/***/ }),\n\n/***/ 516:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar buildFormattingTokensRegExp = __webpack_require__(256)\n\nfunction buildFormatLocale () {\n  // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Jan', 'Feb', 'Már', 'Ápr', 'Máj', 'Jún', 'Júl', 'Aug', 'Sze', 'Okt', 'Nov', 'Dec']\n  var monthsFull = ['Január', 'Február', 'Március', 'Április', 'Május', 'Június', 'Július', 'Augusztus', 'Szeptember', 'Október', 'November', 'December']\n  var weekdays2char = ['Va', 'Hé', 'Ke', 'Sze', 'Cs', 'Pé', 'Szo']\n  var weekdays3char = ['Vas', 'Hét', 'Ked', 'Sze', 'Csü', 'Pén', 'Szo']\n  var weekdaysFull = ['Vasárnap', 'Hétfő', 'Kedd', 'Szerda', 'Csütörtök', 'Péntek', 'Szombat']\n  var meridiemUppercase = ['DE', 'DU']\n  var meridiemLowercase = ['de', 'du']\n  var meridiemFull = ['délelőtt', 'délután']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  var rem100 = number % 100\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st'\n      case 2:\n        return number + 'nd'\n      case 3:\n        return number + 'rd'\n    }\n  }\n  return number + 'th'\n}\n\nmodule.exports = buildFormatLocale\n\n\n/***/ }),\n\n/***/ 568:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar buildDistanceInWordsLocale = __webpack_require__(515)\nvar buildFormatLocale = __webpack_require__(516)\n\n/**\n * @category Locales\n * @summary English locale.\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/19.670aeb21.chunk.js","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'kevesebb, mint egy másodperce',\n      other: 'kevesebb, mint {{count}} másodperce'\n    },\n\n    xSeconds: {\n      one: '1 másodperce',\n      other: '{{count}} másodperce'\n    },\n\n    halfAMinute: 'fél perce',\n\n    lessThanXMinutes: {\n      one: 'kevesebb, mint egy perce',\n      other: 'kevesebb, mint {{count}} perce'\n    },\n\n    xMinutes: {\n      one: '1 perce',\n      other: '{{count}} perce'\n    },\n\n    aboutXHours: {\n      one: 'közel 1 órája',\n      other: 'közel {{count}} órája'\n    },\n\n    xHours: {\n      one: '1 órája',\n      other: '{{count}} órája'\n    },\n\n    xDays: {\n      one: '1 napja',\n      other: '{{count}} napja'\n    },\n\n    aboutXMonths: {\n      one: 'közel 1 hónapja',\n      other: 'közel {{count}} hónapja'\n    },\n\n    xMonths: {\n      one: '1 hónapja',\n      other: '{{count}} hónapja'\n    },\n\n    aboutXYears: {\n      one: 'közel 1 éve',\n      other: 'közel {{count}} éve'\n    },\n\n    xYears: {\n      one: '1 éve',\n      other: '{{count}} éve'\n    },\n\n    overXYears: {\n      one: 'több, mint 1 éve',\n      other: 'több, mint {{count}} éve'\n    },\n\n    almostXYears: {\n      one: 'majdnem 1 éve',\n      other: 'majdnem {{count}} éve'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return '' + result\n      } else {\n        return result + ''\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/locale/hu/build_distance_in_words_locale/index.js\n// module id = 515\n// module chunks = 19 72","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Jan', 'Feb', 'Már', 'Ápr', 'Máj', 'Jún', 'Júl', 'Aug', 'Sze', 'Okt', 'Nov', 'Dec']\n  var monthsFull = ['Január', 'Február', 'Március', 'Április', 'Május', 'Június', 'Július', 'Augusztus', 'Szeptember', 'Október', 'November', 'December']\n  var weekdays2char = ['Va', 'Hé', 'Ke', 'Sze', 'Cs', 'Pé', 'Szo']\n  var weekdays3char = ['Vas', 'Hét', 'Ked', 'Sze', 'Csü', 'Pén', 'Szo']\n  var weekdaysFull = ['Vasárnap', 'Hétfő', 'Kedd', 'Szerda', 'Csütörtök', 'Péntek', 'Szombat']\n  var meridiemUppercase = ['DE', 'DU']\n  var meridiemLowercase = ['de', 'du']\n  var meridiemFull = ['délelőtt', 'délután']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  var rem100 = number % 100\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st'\n      case 2:\n        return number + 'nd'\n      case 3:\n        return number + 'rd'\n    }\n  }\n  return number + 'th'\n}\n\nmodule.exports = buildFormatLocale\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/locale/hu/build_format_locale/index.js\n// module id = 516\n// module chunks = 19 71","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary English locale.\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/date-fns/locale/hu/index.js\n// module id = 568\n// module chunks = 19"],"sourceRoot":""}