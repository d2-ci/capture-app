{"version":3,"file":"index-DYFHxydo.js","sources":["../../../../node_modules/date-fns/locale/da/build_format_locale/index.js"],"sourcesContent":["var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['jan', 'feb', 'mar', 'apr', 'maj', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec']\n  var monthsFull = ['januar', 'februar', 'marts', 'april', 'maj', 'juni', 'juli', 'august', 'september', 'oktober', 'november', 'december']\n  var weekdays2char = ['sø', 'ma', 'ti', 'on', 'to', 'fr', 'lø']\n  var weekdays3char = ['søn', 'man', 'tir', 'ons', 'tor', 'fre', 'lør']\n  var weekdaysFull = ['søndag', 'mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  return number + '.'\n}\n\nmodule.exports = buildFormatLocale\n"],"names":["buildFormattingTokensRegExp","require$$0","buildFormatLocale","months3char","monthsFull","weekdays2char","weekdays3char","weekdaysFull","meridiemUppercase","meridiemLowercase","meridiemFull","formatters","date","ordinalFormatters","formatterToken","ordinal","number","build_format_locale"],"mappings":"qaAAA,IAAIA,EAA8BC,EAElC,SAASC,GAAqB,CAC5B,IAAIC,EAAc,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,EACjGC,EAAa,CAAC,SAAU,UAAW,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,UAAU,EACpIC,EAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAI,EACzDC,EAAgB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,EAChEC,EAAe,CAAC,SAAU,SAAU,UAAW,SAAU,UAAW,SAAU,QAAQ,EACtFC,EAAoB,CAAC,KAAM,IAAI,EAC/BC,EAAoB,CAAC,KAAM,IAAI,EAC/BC,EAAe,CAAC,OAAQ,MAAM,EAE9BC,EAAa,CAEf,IAAO,SAAUC,EAAM,CACrB,OAAOT,EAAYS,EAAK,SAAQ,CAAE,CACxC,EAGI,KAAQ,SAAUA,EAAM,CACtB,OAAOR,EAAWQ,EAAK,SAAQ,CAAE,CACvC,EAGI,GAAM,SAAUA,EAAM,CACpB,OAAOP,EAAcO,EAAK,OAAM,CAAE,CACxC,EAGI,IAAO,SAAUA,EAAM,CACrB,OAAON,EAAcM,EAAK,OAAM,CAAE,CACxC,EAGI,KAAQ,SAAUA,EAAM,CACtB,OAAOL,EAAaK,EAAK,OAAM,CAAE,CACvC,EAGI,EAAK,SAAUA,EAAM,CACnB,OAAQA,EAAK,SAAQ,EAAK,IAAO,EAAIJ,EAAkB,CAAC,EAAIA,EAAkB,CAAC,CACrF,EAGI,EAAK,SAAUI,EAAM,CACnB,OAAQA,EAAK,SAAQ,EAAK,IAAO,EAAIH,EAAkB,CAAC,EAAIA,EAAkB,CAAC,CACrF,EAGI,GAAM,SAAUG,EAAM,CACpB,OAAQA,EAAK,SAAQ,EAAK,IAAO,EAAIF,EAAa,CAAC,EAAIA,EAAa,CAAC,CAC3E,CACA,EAGMG,EAAoB,CAAC,IAAK,IAAK,MAAO,IAAK,IAAK,GAAG,EACvD,OAAAA,EAAkB,QAAQ,SAAUC,EAAgB,CAClDH,EAAWG,EAAiB,GAAG,EAAI,SAAUF,EAAMD,EAAY,CAC7D,OAAOI,EAAQJ,EAAWG,CAAc,EAAEF,CAAI,CAAC,CACrD,CACA,CAAG,EAEM,CACL,WAAYD,EACZ,uBAAwBX,EAA4BW,CAAU,CAClE,CACA,CAEA,SAASI,EAASC,EAAQ,CACxB,OAAOA,EAAS,GAClB,CAEA,IAAAC,EAAiBf","x_google_ignoreList":[0]}