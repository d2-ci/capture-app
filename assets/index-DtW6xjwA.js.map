{"version":3,"file":"index-DtW6xjwA.js","sources":["../../../../node_modules/date-fns/locale/fi/build_distance_in_words_locale/index.js","../../../../node_modules/date-fns/locale/fi/build_format_locale/index.js","../../../../node_modules/date-fns/locale/fi/index.js"],"sourcesContent":["function buildDistanceInWordsLocale () {\n  function futureSeconds (text) {\n    return text.replace(/sekuntia?/, 'sekunnin')\n  }\n\n  function futureMinutes (text) {\n    return text.replace(/minuuttia?/, 'minuutin')\n  }\n\n  function futureHours (text) {\n    return text.replace(/tuntia?/, 'tunnin')\n  }\n\n  function futureDays (text) {\n    return text.replace(/päivää?/, 'päivän')\n  }\n\n  function futureMonths (text) {\n    return text.replace(/(kuukausi|kuukautta)/, 'kuukauden')\n  }\n\n  function futureYears (text) {\n    return text.replace(/(vuosi|vuotta)/, 'vuoden')\n  }\n\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'alle sekunti',\n      other: 'alle {{count}} sekuntia',\n      futureTense: futureSeconds\n    },\n\n    xSeconds: {\n      one: 'sekunti',\n      other: '{{count}} sekuntia',\n      futureTense: futureSeconds\n    },\n\n    halfAMinute: {\n      one: 'puoli minuuttia',\n      other: 'puoli minuuttia',\n      futureTense: function (text) {\n        return 'puolen minuutin'\n      }\n    },\n\n    lessThanXMinutes: {\n      one: 'alle minuutti',\n      other: 'alle {{count}} minuuttia',\n      futureTense: futureMinutes\n    },\n\n    xMinutes: {\n      one: 'minuutti',\n      other: '{{count}} minuuttia',\n      futureTense: futureMinutes\n    },\n\n    aboutXHours: {\n      one: 'noin tunti',\n      other: 'noin {{count}} tuntia',\n      futureTense: futureHours\n    },\n\n    xHours: {\n      one: 'tunti',\n      other: '{{count}} tuntia',\n      futureTense: futureHours\n    },\n\n    xDays: {\n      one: 'päivä',\n      other: '{{count}} päivää',\n      futureTense: futureDays\n    },\n\n    aboutXMonths: {\n      one: 'noin kuukausi',\n      other: 'noin {{count}} kuukautta',\n      futureTense: futureMonths\n    },\n\n    xMonths: {\n      one: 'kuukausi',\n      other: '{{count}} kuukautta',\n      futureTense: futureMonths\n    },\n\n    aboutXYears: {\n      one: 'noin vuosi',\n      other: 'noin {{count}} vuotta',\n      futureTense: futureYears\n    },\n\n    xYears: {\n      one: 'vuosi',\n      other: '{{count}} vuotta',\n      futureTense: futureYears\n    },\n\n    overXYears: {\n      one: 'yli vuosi',\n      other: 'yli {{count}} vuotta',\n      futureTense: futureYears\n    },\n\n    almostXYears: {\n      one: 'lähes vuosi',\n      other: 'lähes {{count}} vuotta',\n      futureTense: futureYears\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var distance = distanceInWordsLocale[token]\n    var result = count === 1 ? distance.one : distance.other.replace('{{count}}', count)\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return distance.futureTense(result) + ' kuluttua'\n      } else {\n        return result + ' sitten'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['tammi', 'helmi', 'maalis', 'huhti', 'touko', 'kesä', 'heinä', 'elo', 'syys', 'loka', 'marras', 'joulu']\n  var monthsFull = ['tammikuu', 'helmikuu', 'maaliskuu', 'huhtikuu', 'toukokuu', 'kesäkuu', 'heinäkuu', 'elokuu', 'syyskuu', 'lokakuu', 'marraskuu', 'joulukuu']\n  var weekdays2char = ['su', 'ma', 'ti', 'ke', 'to', 'pe', 'la']\n  var weekdaysFull = ['sunnuntai', 'maanantai', 'tiistai', 'keskiviikko', 'torstai', 'perjantai', 'lauantai']\n\n  // In Finnish `a.m.` / `p.m.` are virtually never used, but it seems `AP` (aamupäivä) / `IP` (iltapäivä) are acknowleded terms:\n  // https://fi.wikipedia.org/wiki/24_tunnin_kello\n  function meridiem (date) {\n    return date.getHours() < 12 ? 'AP' : 'IP'\n  }\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      // Finnish doesn't use two-char weekdays\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': meridiem,\n\n    // am, pm\n    'a': meridiem,\n\n    // a.m., p.m.\n    'aa': meridiem\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return formatters[formatterToken](date).toString() + '.'\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Finnish locale.\n * @author Pyry-Samuli Lahti [@Pyppe]{@link https://github.com/Pyppe}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n"],"names":["buildDistanceInWordsLocale","futureSeconds","text","futureMinutes","futureHours","futureDays","futureMonths","futureYears","distanceInWordsLocale","localize","token","count","options","distance","result","build_distance_in_words_locale","buildFormattingTokensRegExp","require$$0","buildFormatLocale","months3char","monthsFull","weekdays2char","weekdaysFull","meridiem","date","formatters","ordinalFormatters","formatterToken","build_format_locale","require$$1","fi"],"mappings":"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","x_google_ignoreList":[0,1,2]}