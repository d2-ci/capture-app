{"version":3,"file":"index-C4O4xAtf.js","sources":["../../../../node_modules/date-fns/locale/fi/build_format_locale/index.js"],"sourcesContent":["var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['tammi', 'helmi', 'maalis', 'huhti', 'touko', 'kesä', 'heinä', 'elo', 'syys', 'loka', 'marras', 'joulu']\n  var monthsFull = ['tammikuu', 'helmikuu', 'maaliskuu', 'huhtikuu', 'toukokuu', 'kesäkuu', 'heinäkuu', 'elokuu', 'syyskuu', 'lokakuu', 'marraskuu', 'joulukuu']\n  var weekdays2char = ['su', 'ma', 'ti', 'ke', 'to', 'pe', 'la']\n  var weekdaysFull = ['sunnuntai', 'maanantai', 'tiistai', 'keskiviikko', 'torstai', 'perjantai', 'lauantai']\n\n  // In Finnish `a.m.` / `p.m.` are virtually never used, but it seems `AP` (aamupäivä) / `IP` (iltapäivä) are acknowleded terms:\n  // https://fi.wikipedia.org/wiki/24_tunnin_kello\n  function meridiem (date) {\n    return date.getHours() < 12 ? 'AP' : 'IP'\n  }\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      // Finnish doesn't use two-char weekdays\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': meridiem,\n\n    // am, pm\n    'a': meridiem,\n\n    // a.m., p.m.\n    'aa': meridiem\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return formatters[formatterToken](date).toString() + '.'\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nmodule.exports = buildFormatLocale\n"],"names":["buildFormattingTokensRegExp","require$$0","buildFormatLocale","months3char","monthsFull","weekdays2char","weekdaysFull","meridiem","date","formatters","ordinalFormatters","formatterToken","build_format_locale"],"mappings":"qaAAA,IAAIA,EAA8BC,EAElC,SAASC,GAAqB,CAC5B,IAAIC,EAAc,CAAC,QAAS,QAAS,SAAU,QAAS,QAAS,OAAQ,QAAS,MAAO,OAAQ,OAAQ,SAAU,OAAO,EACtHC,EAAa,CAAC,WAAY,WAAY,YAAa,WAAY,WAAY,UAAW,WAAY,SAAU,UAAW,UAAW,YAAa,UAAU,EACzJC,EAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAI,EACzDC,EAAe,CAAC,YAAa,YAAa,UAAW,cAAe,UAAW,YAAa,UAAU,EAI1G,SAASC,EAAUC,EAAM,CACvB,OAAOA,EAAK,WAAa,GAAK,KAAO,IACzC,CAEE,IAAIC,EAAa,CAEf,IAAO,SAAUD,EAAM,CACrB,OAAOL,EAAYK,EAAK,SAAQ,CAAE,CACxC,EAGI,KAAQ,SAAUA,EAAM,CACtB,OAAOJ,EAAWI,EAAK,SAAQ,CAAE,CACvC,EAGI,GAAM,SAAUA,EAAM,CACpB,OAAOH,EAAcG,EAAK,OAAM,CAAE,CACxC,EAGI,IAAO,SAAUA,EAAM,CAErB,OAAOH,EAAcG,EAAK,OAAM,CAAE,CACxC,EAGI,KAAQ,SAAUA,EAAM,CACtB,OAAOF,EAAaE,EAAK,OAAM,CAAE,CACvC,EAGI,EAAKD,EAGL,EAAKA,EAGL,GAAMA,CACV,EAGMG,EAAoB,CAAC,IAAK,IAAK,MAAO,IAAK,IAAK,GAAG,EACvD,OAAAA,EAAkB,QAAQ,SAAUC,EAAgB,CAClDF,EAAWE,EAAiB,GAAG,EAAI,SAAUH,EAAMC,EAAY,CAC7D,OAAOA,EAAWE,CAAc,EAAEH,CAAI,EAAE,SAAQ,EAAK,GAC3D,CACA,CAAG,EAEM,CACL,WAAYC,EACZ,uBAAwBT,EAA4BS,CAAU,CAClE,CACA,CAEA,IAAAG,EAAiBV","x_google_ignoreList":[0]}