{"version":3,"file":"index-Bm-gU6PS.js","sources":["../../../../node_modules/date-fns/locale/zh_cn/build_format_locale/index.js"],"sourcesContent":["var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']\n  var monthsFull = ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n  var weekdays2char = ['日', '一', '二', '三', '四', '五', '六']\n  var weekdays3char = ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\n  var weekdaysFull = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\n  var meridiemFull = ['上午', '下午']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    }\n  }\n\n  // AM, PM / am, pm / a.m., p.m. all translates to 上午, 下午\n  formatters.a = formatters.aa = formatters.A = function (date) {\n    return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  return number.toString()\n}\n\nmodule.exports = buildFormatLocale\n"],"names":["buildFormattingTokensRegExp","require$$0","buildFormatLocale","months3char","monthsFull","weekdays2char","weekdays3char","weekdaysFull","meridiemFull","formatters","date","ordinalFormatters","formatterToken","ordinal","number","build_format_locale"],"mappings":"qaAAA,IAAIA,EAA8BC,EAElC,SAASC,GAAqB,CAC5B,IAAIC,EAAc,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,MAAO,KAAK,EACxFC,EAAa,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KAAK,EACtFC,EAAgB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAClDC,EAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAI,EACzDC,EAAe,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,EAC/DC,EAAe,CAAC,KAAM,IAAI,EAE1BC,EAAa,CAEf,IAAO,SAAUC,EAAM,CACrB,OAAOP,EAAYO,EAAK,SAAQ,CAAE,CACxC,EAGI,KAAQ,SAAUA,EAAM,CACtB,OAAON,EAAWM,EAAK,SAAQ,CAAE,CACvC,EAGI,GAAM,SAAUA,EAAM,CACpB,OAAOL,EAAcK,EAAK,OAAM,CAAE,CACxC,EAGI,IAAO,SAAUA,EAAM,CACrB,OAAOJ,EAAcI,EAAK,OAAM,CAAE,CACxC,EAGI,KAAQ,SAAUA,EAAM,CACtB,OAAOH,EAAaG,EAAK,OAAM,CAAE,CACvC,CACA,EAGED,EAAW,EAAIA,EAAW,GAAKA,EAAW,EAAI,SAAUC,EAAM,CAC5D,OAAQA,EAAK,SAAQ,EAAK,IAAO,EAAIF,EAAa,CAAC,EAAIA,EAAa,CAAC,CACzE,EAGE,IAAIG,EAAoB,CAAC,IAAK,IAAK,MAAO,IAAK,IAAK,GAAG,EACvD,OAAAA,EAAkB,QAAQ,SAAUC,EAAgB,CAClDH,EAAWG,EAAiB,GAAG,EAAI,SAAUF,EAAMD,EAAY,CAC7D,OAAOI,EAAQJ,EAAWG,CAAc,EAAEF,CAAI,CAAC,CACrD,CACA,CAAG,EAEM,CACL,WAAYD,EACZ,uBAAwBT,EAA4BS,CAAU,CAClE,CACA,CAEA,SAASI,EAASC,EAAQ,CACxB,OAAOA,EAAO,SAAQ,CACxB,CAEA,IAAAC,EAAiBb","x_google_ignoreList":[0]}