{"version":3,"file":"index-8R1dV8nc.js","sources":["../../../../node_modules/date-fns/locale/tr/build_distance_in_words_locale/index.js","../../../../node_modules/date-fns/locale/tr/build_format_locale/index.js","../../../../node_modules/date-fns/locale/tr/index.js"],"sourcesContent":["function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'bir saniyeden az',\n      other: '{{count}} saniyeden az'\n    },\n\n    xSeconds: {\n      one: '1 saniye',\n      other: '{{count}} saniye'\n    },\n\n    halfAMinute: 'yarım dakika',\n\n    lessThanXMinutes: {\n      one: 'bir dakikadan az',\n      other: '{{count}} dakikadan az'\n    },\n\n    xMinutes: {\n      one: '1 dakika',\n      other: '{{count}} dakika'\n    },\n\n    aboutXHours: {\n      one: 'yaklaşık 1 saat',\n      other: 'yaklaşık {{count}} saat'\n    },\n\n    xHours: {\n      one: '1 saat',\n      other: '{{count}} saat'\n    },\n\n    xDays: {\n      one: '1 gün',\n      other: '{{count}} gün'\n    },\n\n    aboutXMonths: {\n      one: 'yaklaşık 1 ay',\n      other: 'yaklaşık {{count}} ay'\n    },\n\n    xMonths: {\n      one: '1 ay',\n      other: '{{count}} ay'\n    },\n\n    aboutXYears: {\n      one: 'yaklaşık 1 yıl',\n      other: 'yaklaşık {{count}} yıl'\n    },\n\n    xYears: {\n      one: '1 yıl',\n      other: '{{count}} yıl'\n    },\n\n    overXYears: {\n      one: '1 yıldan fazla',\n      other: '{{count}} yıldan fazla'\n    },\n\n    almostXYears: {\n      one: 'neredeyse 1 yıl',\n      other: 'neredeyse {{count}} yıl'\n    }\n  }\n\n  var extraWordTokens = [\n    'lessThanXSeconds',\n    'lessThanXMinutes',\n    'overXYears'\n  ]\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      var extraWord = ''\n      if (extraWordTokens.indexOf(token) > -1) {\n        extraWord = ' bir süre'\n      }\n\n      if (options.comparison > 0) {\n        return result + extraWord + ' içinde'\n      } else {\n        return result + extraWord + ' önce'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  // Note: in Turkish, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Oca', 'Şub', 'Mar', 'Nis', 'May', 'Haz', 'Tem', 'Ağu', 'Eyl', 'Eki', 'Kas', 'Ara']\n  var monthsFull = ['Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık']\n  var weekdays2char = ['Pz', 'Pt', 'Sa', 'Ça', 'Pe', 'Cu', 'Ct']\n  var weekdays3char = ['Paz', 'Pts', 'Sal', 'Çar', 'Per', 'Cum', 'Cts']\n  var weekdaysFull = ['Pazar', 'Pazartesi', 'Salı', 'Çarşamba', 'Perşembe', 'Cuma', 'Cumartesi']\n  var meridiemUppercase = ['ÖÖ', 'ÖS']\n  var meridiemLowercase = ['öö', 'ös']\n  var meridiemFull = ['ö.ö.', 'ö.s.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  var suffixes = {\n    1: '\\'inci',\n    2: '\\'inci',\n    3: '\\'üncü',\n    4: '\\'üncü',\n    5: '\\'inci',\n    6: '\\'ıncı',\n    7: '\\'inci',\n    8: '\\'inci',\n    9: '\\'uncu',\n    10: '\\'uncu',\n    20: '\\'inci',\n    30: '\\'uncu',\n    50: '\\'inci',\n    60: '\\'ıncı',\n    70: '\\'inci',\n    80: '\\'inci',\n    90: '\\'ıncı',\n    100: '\\'üncü'\n  }\n\n  if (number === 0) {\n    return '0\\'ıncı'\n  }\n\n  var x = number % 10\n  var y = number % 100 - x\n  var z = number >= 100 ? 100 : null\n\n  return number + (suffixes[x] || suffixes[y] || suffixes[z])\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Turkish locale.\n * @author Alpcan Aydın [@alpcanaydin]{@link https://github.com/alpcanaydin}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n"],"names":["buildDistanceInWordsLocale","distanceInWordsLocale","extraWordTokens","localize","token","count","options","result","extraWord","build_distance_in_words_locale","buildFormattingTokensRegExp","require$$0","buildFormatLocale","months3char","monthsFull","weekdays2char","weekdays3char","weekdaysFull","meridiemUppercase","meridiemLowercase","meridiemFull","formatters","date","ordinalFormatters","formatterToken","ordinal","number","suffixes","x","y","z","build_format_locale","require$$1","tr"],"mappings":"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","x_google_ignoreList":[0,1,2]}