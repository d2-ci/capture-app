{"version":3,"file":"index-SjOdG6sv.js","sources":["../../../../node_modules/date-fns/locale/mk/build_distance_in_words_locale/index.js","../../../../node_modules/date-fns/locale/mk/build_format_locale/index.js","../../../../node_modules/date-fns/locale/mk/index.js"],"sourcesContent":["function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'помалку од секунда',\n      other: 'помалку од {{count}} секунди'\n    },\n\n    xSeconds: {\n      one: '1 секунда',\n      other: '{{count}} секунди'\n    },\n\n    halfAMinute: 'половина минута',\n\n    lessThanXMinutes: {\n      one: 'помалку од минута',\n      other: 'помалку од {{count}} минути'\n    },\n\n    xMinutes: {\n      one: '1 минута',\n      other: '{{count}} минути'\n    },\n\n    aboutXHours: {\n      one: 'околу 1 час',\n      other: 'околу {{count}} часа'\n    },\n\n    xHours: {\n      one: '1 час',\n      other: '{{count}} часа'\n    },\n\n    xDays: {\n      one: '1 ден',\n      other: '{{count}} дена'\n    },\n\n    aboutXMonths: {\n      one: 'околу 1 месец',\n      other: 'околу {{count}} месеци'\n    },\n\n    xMonths: {\n      one: '1 месец',\n      other: '{{count}} месеци'\n    },\n\n    aboutXYears: {\n      one: 'околу 1 година',\n      other: 'околу {{count}} години'\n    },\n\n    xYears: {\n      one: '1 година',\n      other: '{{count}} години'\n    },\n\n    overXYears: {\n      one: 'повеќе од 1 година',\n      other: 'повеќе од {{count}} години'\n    },\n\n    almostXYears: {\n      one: 'безмалку 1 година',\n      other: 'безмалку {{count}} години'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'за ' + result\n      } else {\n        return 'пред ' + result\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['јан', 'фев', 'мар', 'апр', 'мај', 'јун', 'јул', 'авг', 'сеп', 'окт', 'ное', 'дек']\n  var monthsFull = ['јануари', 'февруари', 'март', 'април', 'мај', 'јуни', 'јули', 'август', 'септември', 'октомври', 'ноември', 'декември']\n  var weekdays2char = ['не', 'по', 'вт', 'ср', 'че', 'пе', 'са']\n  var weekdays3char = ['нед', 'пон', 'вто', 'сре', 'чет', 'пет', 'саб']\n  var weekdaysFull = ['недела', 'понеделник', 'вторник', 'среда', 'четврток', 'петок', 'сабота']\n  var meridiem = ['претпладне', 'попладне']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiem[1] : meridiem[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiem[1] : meridiem[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiem[1] : meridiem[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  var rem100 = number % 100\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + '-ви'\n      case 2:\n        return number + '-ри'\n      case 7:\n      case 8:\n        return number + '-ми'\n    }\n  }\n  return number + '-ти'\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Macedonian locale.\n * @author Petar Vlahu [@vlahupetar]{@link https://github.com/vlahupetar}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n"],"names":["buildDistanceInWordsLocale","distanceInWordsLocale","localize","token","count","options","result","build_distance_in_words_locale","buildFormattingTokensRegExp","require$$0","buildFormatLocale","months3char","monthsFull","weekdays2char","weekdays3char","weekdaysFull","meridiem","formatters","date","ordinalFormatters","formatterToken","ordinal","number","rem100","build_format_locale","require$$1","mk"],"mappings":"+EAAA,SAASA,GAA8B,CACrC,IAAIC,EAAwB,CAC1B,iBAAkB,CAChB,IAAK,qBACL,MAAO,8BACb,EAEI,SAAU,CACR,IAAK,YACL,MAAO,mBACb,EAEI,YAAa,kBAEb,iBAAkB,CAChB,IAAK,oBACL,MAAO,6BACb,EAEI,SAAU,CACR,IAAK,WACL,MAAO,kBACb,EAEI,YAAa,CACX,IAAK,cACL,MAAO,sBACb,EAEI,OAAQ,CACN,IAAK,QACL,MAAO,gBACb,EAEI,MAAO,CACL,IAAK,QACL,MAAO,gBACb,EAEI,aAAc,CACZ,IAAK,gBACL,MAAO,wBACb,EAEI,QAAS,CACP,IAAK,UACL,MAAO,kBACb,EAEI,YAAa,CACX,IAAK,iBACL,MAAO,wBACb,EAEI,OAAQ,CACN,IAAK,WACL,MAAO,kBACb,EAEI,WAAY,CACV,IAAK,qBACL,MAAO,4BACb,EAEI,aAAc,CACZ,IAAK,oBACL,MAAO,2BACb,CACA,EAEE,SAASC,EAAUC,EAAOC,EAAOC,EAAS,CACxCA,EAAUA,GAAW,CAAA,EAErB,IAAIC,EASJ,OARI,OAAOL,EAAsBE,CAAK,GAAM,SAC1CG,EAASL,EAAsBE,CAAK,EAC3BC,IAAU,EACnBE,EAASL,EAAsBE,CAAK,EAAE,IAEtCG,EAASL,EAAsBE,CAAK,EAAE,MAAM,QAAQ,YAAaC,CAAK,EAGpEC,EAAQ,UACNA,EAAQ,WAAa,EAChB,MAAQC,EAER,QAAUA,EAIdA,CACX,CAEE,MAAO,CACL,SAAUJ,CACd,CACA,CAEA,IAAAK,EAAiBP,EClGbQ,EAA8BC,EAElC,SAASC,GAAqB,CAC5B,IAAIC,EAAc,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,EACjGC,EAAa,CAAC,UAAW,WAAY,OAAQ,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,WAAY,UAAW,UAAU,EACrIC,EAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAI,EACzDC,EAAgB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,EAChEC,EAAe,CAAC,SAAU,aAAc,UAAW,QAAS,WAAY,QAAS,QAAQ,EACzFC,EAAW,CAAC,aAAc,UAAU,EAEpCC,EAAa,CAEf,IAAO,SAAUC,EAAM,CACrB,OAAOP,EAAYO,EAAK,SAAQ,CAAE,CACxC,EAGI,KAAQ,SAAUA,EAAM,CACtB,OAAON,EAAWM,EAAK,SAAQ,CAAE,CACvC,EAGI,GAAM,SAAUA,EAAM,CACpB,OAAOL,EAAcK,EAAK,OAAM,CAAE,CACxC,EAGI,IAAO,SAAUA,EAAM,CACrB,OAAOJ,EAAcI,EAAK,OAAM,CAAE,CACxC,EAGI,KAAQ,SAAUA,EAAM,CACtB,OAAOH,EAAaG,EAAK,OAAM,CAAE,CACvC,EAGI,EAAK,SAAUA,EAAM,CACnB,OAAQA,EAAK,SAAQ,EAAK,IAAO,EAAIF,EAAS,CAAC,EAAIA,EAAS,CAAC,CACnE,EAGI,EAAK,SAAUE,EAAM,CACnB,OAAQA,EAAK,SAAQ,EAAK,IAAO,EAAIF,EAAS,CAAC,EAAIA,EAAS,CAAC,CACnE,EAGI,GAAM,SAAUE,EAAM,CACpB,OAAQA,EAAK,SAAQ,EAAK,IAAO,EAAIF,EAAS,CAAC,EAAIA,EAAS,CAAC,CACnE,CACA,EAGMG,EAAoB,CAAC,IAAK,IAAK,MAAO,IAAK,IAAK,GAAG,EACvD,OAAAA,EAAkB,QAAQ,SAAUC,EAAgB,CAClDH,EAAWG,EAAiB,GAAG,EAAI,SAAUF,EAAMD,EAAY,CAC7D,OAAOI,EAAQJ,EAAWG,CAAc,EAAEF,CAAI,CAAC,CACrD,CACA,CAAG,EAEM,CACL,WAAYD,EACZ,uBAAwBT,EAA4BS,CAAU,CAClE,CACA,CAEA,SAASI,EAASC,EAAQ,CACxB,IAAIC,EAASD,EAAS,IACtB,GAAIC,EAAS,IAAMA,EAAS,GAC1B,OAAQA,EAAS,GAAE,CACjB,IAAK,GACH,OAAOD,EAAS,MAClB,IAAK,GACH,OAAOA,EAAS,MAClB,IAAK,GACL,IAAK,GACH,OAAOA,EAAS,KACxB,CAEE,OAAOA,EAAS,KAClB,CAEA,IAAAE,EAAiBd,EClFbV,EAA6BS,EAC7BC,EAAoBe,EAOxBC,EAAiB,CACf,gBAAiB1B,EAA0B,EAC3C,OAAQU,EAAiB,CAC3B","x_google_ignoreList":[0,1,2]}