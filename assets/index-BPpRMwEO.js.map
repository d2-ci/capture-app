{"version":3,"file":"index-BPpRMwEO.js","sources":["../../../../node_modules/date-fns/locale/ru/build_distance_in_words_locale/index.js","../../../../node_modules/date-fns/locale/ru/build_format_locale/index.js","../../../../node_modules/date-fns/locale/ru/index.js"],"sourcesContent":["function declension (scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one\n  }\n\n  var rem10 = count % 10\n  var rem100 = count % 100\n\n  // 1, 21, 31, ...\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', count)\n\n  // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if ((rem10 >= 2 && rem10 <= 4) && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', count)\n\n  // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', count)\n  }\n}\n\nfunction buildLocalizeTokenFn (scheme) {\n  return function (count, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count)\n        } else {\n          return 'через ' + declension(scheme.regular, count)\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count)\n        } else {\n          return declension(scheme.regular, count) + ' назад'\n        }\n      }\n    } else {\n      return declension(scheme.regular, count)\n    }\n  }\n}\n\nfunction buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: buildLocalizeTokenFn({\n      regular: {\n        one: 'меньше секунды',\n        singularNominative: 'меньше {{count}} секунды',\n        singularGenitive: 'меньше {{count}} секунд',\n        pluralGenitive: 'меньше {{count}} секунд'\n      },\n      future: {\n        one: 'меньше, чем через секунду',\n        singularNominative: 'меньше, чем через {{count}} секунду',\n        singularGenitive: 'меньше, чем через {{count}} секунды',\n        pluralGenitive: 'меньше, чем через {{count}} секунд'\n      }\n    }),\n\n    xSeconds: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: '{{count}} секунда',\n        singularGenitive: '{{count}} секунды',\n        pluralGenitive: '{{count}} секунд'\n      },\n      past: {\n        singularNominative: '{{count}} секунду назад',\n        singularGenitive: '{{count}} секунды назад',\n        pluralGenitive: '{{count}} секунд назад'\n      },\n      future: {\n        singularNominative: 'через {{count}} секунду',\n        singularGenitive: 'через {{count}} секунды',\n        pluralGenitive: 'через {{count}} секунд'\n      }\n    }),\n\n    halfAMinute: function (_, options) {\n      if (options.addSuffix) {\n        if (options.comparison > 0) {\n          return 'через полминуты'\n        } else {\n          return 'полминуты назад'\n        }\n      }\n\n      return 'полминуты'\n    },\n\n    lessThanXMinutes: buildLocalizeTokenFn({\n      regular: {\n        one: 'меньше минуты',\n        singularNominative: 'меньше {{count}} минуты',\n        singularGenitive: 'меньше {{count}} минут',\n        pluralGenitive: 'меньше {{count}} минут'\n      },\n      future: {\n        one: 'меньше, чем через минуту',\n        singularNominative: 'меньше, чем через {{count}} минуту',\n        singularGenitive: 'меньше, чем через {{count}} минуты',\n        pluralGenitive: 'меньше, чем через {{count}} минут'\n      }\n    }),\n\n    xMinutes: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: '{{count}} минута',\n        singularGenitive: '{{count}} минуты',\n        pluralGenitive: '{{count}} минут'\n      },\n      past: {\n        singularNominative: '{{count}} минуту назад',\n        singularGenitive: '{{count}} минуты назад',\n        pluralGenitive: '{{count}} минут назад'\n      },\n      future: {\n        singularNominative: 'через {{count}} минуту',\n        singularGenitive: 'через {{count}} минуты',\n        pluralGenitive: 'через {{count}} минут'\n      }\n    }),\n\n    aboutXHours: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: 'около {{count}} часа',\n        singularGenitive: 'около {{count}} часов',\n        pluralGenitive: 'около {{count}} часов'\n      },\n      future: {\n        singularNominative: 'приблизительно через {{count}} час',\n        singularGenitive: 'приблизительно через {{count}} часа',\n        pluralGenitive: 'приблизительно через {{count}} часов'\n      }\n    }),\n\n    xHours: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: '{{count}} час',\n        singularGenitive: '{{count}} часа',\n        pluralGenitive: '{{count}} часов'\n      }\n    }),\n\n    xDays: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: '{{count}} день',\n        singularGenitive: '{{count}} дня',\n        pluralGenitive: '{{count}} дней'\n      }\n    }),\n\n    aboutXMonths: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: 'около {{count}} месяца',\n        singularGenitive: 'около {{count}} месяцев',\n        pluralGenitive: 'около {{count}} месяцев'\n      },\n      future: {\n        singularNominative: 'приблизительно через {{count}} месяц',\n        singularGenitive: 'приблизительно через {{count}} месяца',\n        pluralGenitive: 'приблизительно через {{count}} месяцев'\n      }\n    }),\n\n    xMonths: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: '{{count}} месяц',\n        singularGenitive: '{{count}} месяца',\n        pluralGenitive: '{{count}} месяцев'\n      }\n    }),\n\n    aboutXYears: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: 'около {{count}} года',\n        singularGenitive: 'около {{count}} лет',\n        pluralGenitive: 'около {{count}} лет'\n      },\n      future: {\n        singularNominative: 'приблизительно через {{count}} год',\n        singularGenitive: 'приблизительно через {{count}} года',\n        pluralGenitive: 'приблизительно через {{count}} лет'\n      }\n    }),\n\n    xYears: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: '{{count}} год',\n        singularGenitive: '{{count}} года',\n        pluralGenitive: '{{count}} лет'\n      }\n    }),\n\n    overXYears: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: 'больше {{count}} года',\n        singularGenitive: 'больше {{count}} лет',\n        pluralGenitive: 'больше {{count}} лет'\n      },\n      future: {\n        singularNominative: 'больше, чем через {{count}} год',\n        singularGenitive: 'больше, чем через {{count}} года',\n        pluralGenitive: 'больше, чем через {{count}} лет'\n      }\n    }),\n\n    almostXYears: buildLocalizeTokenFn({\n      regular: {\n        singularNominative: 'почти {{count}} год',\n        singularGenitive: 'почти {{count}} года',\n        pluralGenitive: 'почти {{count}} лет'\n      },\n      future: {\n        singularNominative: 'почти через {{count}} год',\n        singularGenitive: 'почти через {{count}} года',\n        pluralGenitive: 'почти через {{count}} лет'\n      }\n    })\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n    return distanceInWordsLocale[token](count, options)\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  // http://new.gramota.ru/spravka/buro/search-answer?s=242637\n  var monthsShort = ['янв.', 'фев.', 'март', 'апр.', 'май', 'июнь', 'июль', 'авг.', 'сент.', 'окт.', 'нояб.', 'дек.']\n  var monthsFull = ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь']\n  var monthsGenitive = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']\n  var weekdays2char = ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб']\n  var weekdays3char = ['вск', 'пнд', 'втр', 'срд', 'чтв', 'птн', 'суб']\n  var weekdaysFull = ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота']\n  var meridiem = ['ночи', 'утра', 'дня', 'вечера']\n\n  var formatters = {\n    // Month: янв., фев., ..., дек.\n    'MMM': function (date) {\n      return monthsShort[date.getMonth()]\n    },\n\n    // Month: январь, февраль, ..., декабрь\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: вс, пн, ..., сб\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: вск, пнд, ..., суб\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: воскресенье, понедельник, ..., суббота\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // Time of day: ночи, утра, дня, вечера\n    'A': function (date) {\n      var hours = date.getHours()\n      if (hours >= 17) {\n        return meridiem[3]\n      } else if (hours >= 12) {\n        return meridiem[2]\n      } else if (hours >= 4) {\n        return meridiem[1]\n      } else {\n        return meridiem[0]\n      }\n    },\n\n    'Do': function (date, formatters) {\n      return formatters.D(date) + '-е'\n    },\n\n    'Wo': function (date, formatters) {\n      return formatters.W(date) + '-я'\n    }\n  }\n\n  formatters.a = formatters.A\n  formatters.aa = formatters.A\n\n  // Generate ordinal version of formatters: M -> Mo, DDD -> DDDo, etc.\n  var ordinalFormatters = ['M', 'DDD', 'd', 'Q']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return formatters[formatterToken](date) + '-й'\n    }\n  })\n\n  // Generate formatters like 'D MMMM',\n  // where month is in the genitive case: января, февраля, ..., декабря\n  var monthsGenitiveFormatters = ['D', 'Do', 'DD']\n  monthsGenitiveFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + ' MMMM'] = function (date, commonFormatters) {\n      var formatter = formatters[formatterToken] || commonFormatters[formatterToken]\n      return formatter(date, commonFormatters) + ' ' + monthsGenitive[date.getMonth()]\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Russian locale.\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n"],"names":["declension","scheme","count","rem10","rem100","buildLocalizeTokenFn","options","buildDistanceInWordsLocale","distanceInWordsLocale","_","localize","token","build_distance_in_words_locale","buildFormattingTokensRegExp","require$$0","buildFormatLocale","monthsShort","monthsFull","monthsGenitive","weekdays2char","weekdays3char","weekdaysFull","meridiem","formatters","date","hours","ordinalFormatters","formatterToken","monthsGenitiveFormatters","commonFormatters","formatter","build_format_locale","require$$1","ru"],"mappings":"+EAAA,SAASA,EAAYC,EAAQC,EAAO,CAElC,GAAID,EAAO,MAAQ,QAAaC,IAAU,EACxC,OAAOD,EAAO,IAGhB,IAAIE,EAAQD,EAAQ,GAChBE,EAASF,EAAQ,IAGrB,OAAIC,IAAU,GAAKC,IAAW,GACrBH,EAAO,mBAAmB,QAAQ,YAAaC,CAAK,EAGjDC,GAAS,GAAKA,GAAS,IAAOC,EAAS,IAAMA,EAAS,IACzDH,EAAO,iBAAiB,QAAQ,YAAaC,CAAK,EAIlDD,EAAO,eAAe,QAAQ,YAAaC,CAAK,CAE3D,CAEA,SAASG,EAAsBJ,EAAQ,CACrC,OAAO,SAAUC,EAAOI,EAAS,CAC/B,OAAIA,EAAQ,UACNA,EAAQ,WAAa,EACnBL,EAAO,OACFD,EAAWC,EAAO,OAAQC,CAAK,EAE/B,SAAWF,EAAWC,EAAO,QAASC,CAAK,EAGhDD,EAAO,KACFD,EAAWC,EAAO,KAAMC,CAAK,EAE7BF,EAAWC,EAAO,QAASC,CAAK,EAAI,SAIxCF,EAAWC,EAAO,QAASC,CAAK,CAE7C,CACA,CAEA,SAASK,GAA8B,CACrC,IAAIC,EAAwB,CAC1B,iBAAkBH,EAAqB,CACrC,QAAS,CACP,IAAK,iBACL,mBAAoB,2BACpB,iBAAkB,0BAClB,eAAgB,yBACxB,EACM,OAAQ,CACN,IAAK,4BACL,mBAAoB,sCACpB,iBAAkB,sCAClB,eAAgB,oCACxB,CACA,CAAK,EAED,SAAUA,EAAqB,CAC7B,QAAS,CACP,mBAAoB,oBACpB,iBAAkB,oBAClB,eAAgB,kBACxB,EACM,KAAM,CACJ,mBAAoB,0BACpB,iBAAkB,0BAClB,eAAgB,wBACxB,EACM,OAAQ,CACN,mBAAoB,0BACpB,iBAAkB,0BAClB,eAAgB,wBACxB,CACA,CAAK,EAED,YAAa,SAAUI,EAAGH,EAAS,CACjC,OAAIA,EAAQ,UACNA,EAAQ,WAAa,EAChB,kBAEA,kBAIJ,WACb,EAEI,iBAAkBD,EAAqB,CACrC,QAAS,CACP,IAAK,gBACL,mBAAoB,0BACpB,iBAAkB,yBAClB,eAAgB,wBACxB,EACM,OAAQ,CACN,IAAK,2BACL,mBAAoB,qCACpB,iBAAkB,qCAClB,eAAgB,mCACxB,CACA,CAAK,EAED,SAAUA,EAAqB,CAC7B,QAAS,CACP,mBAAoB,mBACpB,iBAAkB,mBAClB,eAAgB,iBACxB,EACM,KAAM,CACJ,mBAAoB,yBACpB,iBAAkB,yBAClB,eAAgB,uBACxB,EACM,OAAQ,CACN,mBAAoB,yBACpB,iBAAkB,yBAClB,eAAgB,uBACxB,CACA,CAAK,EAED,YAAaA,EAAqB,CAChC,QAAS,CACP,mBAAoB,uBACpB,iBAAkB,wBAClB,eAAgB,uBACxB,EACM,OAAQ,CACN,mBAAoB,qCACpB,iBAAkB,sCAClB,eAAgB,sCACxB,CACA,CAAK,EAED,OAAQA,EAAqB,CAC3B,QAAS,CACP,mBAAoB,gBACpB,iBAAkB,iBAClB,eAAgB,iBACxB,CACA,CAAK,EAED,MAAOA,EAAqB,CAC1B,QAAS,CACP,mBAAoB,iBACpB,iBAAkB,gBAClB,eAAgB,gBACxB,CACA,CAAK,EAED,aAAcA,EAAqB,CACjC,QAAS,CACP,mBAAoB,yBACpB,iBAAkB,0BAClB,eAAgB,yBACxB,EACM,OAAQ,CACN,mBAAoB,uCACpB,iBAAkB,wCAClB,eAAgB,wCACxB,CACA,CAAK,EAED,QAASA,EAAqB,CAC5B,QAAS,CACP,mBAAoB,kBACpB,iBAAkB,mBAClB,eAAgB,mBACxB,CACA,CAAK,EAED,YAAaA,EAAqB,CAChC,QAAS,CACP,mBAAoB,uBACpB,iBAAkB,sBAClB,eAAgB,qBACxB,EACM,OAAQ,CACN,mBAAoB,qCACpB,iBAAkB,sCAClB,eAAgB,oCACxB,CACA,CAAK,EAED,OAAQA,EAAqB,CAC3B,QAAS,CACP,mBAAoB,gBACpB,iBAAkB,iBAClB,eAAgB,eACxB,CACA,CAAK,EAED,WAAYA,EAAqB,CAC/B,QAAS,CACP,mBAAoB,wBACpB,iBAAkB,uBAClB,eAAgB,sBACxB,EACM,OAAQ,CACN,mBAAoB,kCACpB,iBAAkB,mCAClB,eAAgB,iCACxB,CACA,CAAK,EAED,aAAcA,EAAqB,CACjC,QAAS,CACP,mBAAoB,sBACpB,iBAAkB,uBAClB,eAAgB,qBACxB,EACM,OAAQ,CACN,mBAAoB,4BACpB,iBAAkB,6BAClB,eAAgB,2BACxB,CACA,CAAK,CACL,EAEE,SAASK,EAAUC,EAAOT,EAAOI,EAAS,CACxC,OAAAA,EAAUA,GAAW,CAAA,EACdE,EAAsBG,CAAK,EAAET,EAAOI,CAAO,CACtD,CAEE,MAAO,CACL,SAAUI,CACd,CACA,CAEA,IAAAE,EAAiBL,ECzObM,EAA8BC,EAElC,SAASC,GAAqB,CAE5B,IAAIC,EAAc,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,OAAQ,OAAQ,OAAQ,QAAS,OAAQ,QAAS,MAAM,EAC9GC,EAAa,CAAC,SAAU,UAAW,OAAQ,SAAU,MAAO,OAAQ,OAAQ,SAAU,WAAY,UAAW,SAAU,SAAS,EAChIC,EAAiB,CAAC,SAAU,UAAW,QAAS,SAAU,MAAO,OAAQ,OAAQ,UAAW,WAAY,UAAW,SAAU,SAAS,EACtIC,EAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAI,EACzDC,EAAgB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,EAChEC,EAAe,CAAC,cAAe,cAAe,UAAW,QAAS,UAAW,UAAW,SAAS,EACjGC,EAAW,CAAC,OAAQ,OAAQ,MAAO,QAAQ,EAE3CC,EAAa,CAEf,IAAO,SAAUC,EAAM,CACrB,OAAOR,EAAYQ,EAAK,SAAQ,CAAE,CACxC,EAGI,KAAQ,SAAUA,EAAM,CACtB,OAAOP,EAAWO,EAAK,SAAQ,CAAE,CACvC,EAGI,GAAM,SAAUA,EAAM,CACpB,OAAOL,EAAcK,EAAK,OAAM,CAAE,CACxC,EAGI,IAAO,SAAUA,EAAM,CACrB,OAAOJ,EAAcI,EAAK,OAAM,CAAE,CACxC,EAGI,KAAQ,SAAUA,EAAM,CACtB,OAAOH,EAAaG,EAAK,OAAM,CAAE,CACvC,EAGI,EAAK,SAAUA,EAAM,CACnB,IAAIC,EAAQD,EAAK,SAAQ,EACzB,OAAIC,GAAS,GACJH,EAAS,CAAC,EACRG,GAAS,GACXH,EAAS,CAAC,EACRG,GAAS,EACXH,EAAS,CAAC,EAEVA,EAAS,CAAC,CAEzB,EAEI,GAAM,SAAUE,EAAMD,EAAY,CAChC,OAAOA,EAAW,EAAEC,CAAI,EAAI,IAClC,EAEI,GAAM,SAAUA,EAAMD,EAAY,CAChC,OAAOA,EAAW,EAAEC,CAAI,EAAI,IAClC,CACA,EAEED,EAAW,EAAIA,EAAW,EAC1BA,EAAW,GAAKA,EAAW,EAG3B,IAAIG,EAAoB,CAAC,IAAK,MAAO,IAAK,GAAG,EAC7CA,EAAkB,QAAQ,SAAUC,EAAgB,CAClDJ,EAAWI,EAAiB,GAAG,EAAI,SAAUH,EAAMD,EAAY,CAC7D,OAAOA,EAAWI,CAAc,EAAEH,CAAI,EAAI,IAChD,CACA,CAAG,EAID,IAAII,EAA2B,CAAC,IAAK,KAAM,IAAI,EAC/C,OAAAA,EAAyB,QAAQ,SAAUD,EAAgB,CACzDJ,EAAWI,EAAiB,OAAO,EAAI,SAAUH,EAAMK,EAAkB,CACvE,IAAIC,EAAYP,EAAWI,CAAc,GAAKE,EAAiBF,CAAc,EAC7E,OAAOG,EAAUN,EAAMK,CAAgB,EAAI,IAAMX,EAAeM,EAAK,SAAQ,CAAE,CACrF,CACA,CAAG,EAEM,CACL,WAAYD,EACZ,uBAAwBV,EAA4BU,CAAU,CAClE,CACA,CAEA,IAAAQ,EAAiBhB,ECxFbR,EAA6BO,EAC7BC,EAAoBiB,EAMxBC,EAAiB,CACf,gBAAiB1B,EAA0B,EAC3C,OAAQQ,EAAiB,CAC3B","x_google_ignoreList":[0,1,2]}