{"version":3,"file":"gom-latn-Dgjec6zp.js","sources":["../../../../../node_modules/moment/dist/locale/gom-latn.js"],"sourcesContent":["//! moment.js locale configuration\n//! locale : Konkani Latin script [gom-latn]\n//! author : The Discoverer : https://github.com/WikiDiscoverer\n\nimport moment from '../moment';\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n    var format = {\n        s: ['thoddea sekondamni', 'thodde sekond'],\n        ss: [number + ' sekondamni', number + ' sekond'],\n        m: ['eka mintan', 'ek minut'],\n        mm: [number + ' mintamni', number + ' mintam'],\n        h: ['eka voran', 'ek vor'],\n        hh: [number + ' voramni', number + ' voram'],\n        d: ['eka disan', 'ek dis'],\n        dd: [number + ' disamni', number + ' dis'],\n        M: ['eka mhoinean', 'ek mhoino'],\n        MM: [number + ' mhoineamni', number + ' mhoine'],\n        y: ['eka vorsan', 'ek voros'],\n        yy: [number + ' vorsamni', number + ' vorsam'],\n    };\n    return isFuture ? format[key][0] : format[key][1];\n}\n\nexport default moment.defineLocale('gom-latn', {\n    months: {\n        standalone:\n            'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split(\n                '_'\n            ),\n        format: 'Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea'.split(\n            '_'\n        ),\n        isFormat: /MMMM(\\s)+D[oD]?/,\n    },\n    monthsShort:\n        'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),\n    monthsParseExact: true,\n    weekdays: \"Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var\".split('_'),\n    weekdaysShort: 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),\n    weekdaysMin: 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'A h:mm [vazta]',\n        LTS: 'A h:mm:ss [vazta]',\n        L: 'DD-MM-YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY A h:mm [vazta]',\n        LLLL: 'dddd, MMMM Do, YYYY, A h:mm [vazta]',\n        llll: 'ddd, D MMM YYYY, A h:mm [vazta]',\n    },\n    calendar: {\n        sameDay: '[Aiz] LT',\n        nextDay: '[Faleam] LT',\n        nextWeek: '[Fuddlo] dddd[,] LT',\n        lastDay: '[Kal] LT',\n        lastWeek: '[Fattlo] dddd[,] LT',\n        sameElse: 'L',\n    },\n    relativeTime: {\n        future: '%s',\n        past: '%s adim',\n        s: processRelativeTime,\n        ss: processRelativeTime,\n        m: processRelativeTime,\n        mm: processRelativeTime,\n        h: processRelativeTime,\n        hh: processRelativeTime,\n        d: processRelativeTime,\n        dd: processRelativeTime,\n        M: processRelativeTime,\n        MM: processRelativeTime,\n        y: processRelativeTime,\n        yy: processRelativeTime,\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er)/,\n    ordinal: function (number, period) {\n        switch (period) {\n            // the ordinal 'er' only applies to day of the month\n            case 'D':\n                return number + 'er';\n            default:\n            case 'M':\n            case 'Q':\n            case 'DDD':\n            case 'd':\n            case 'w':\n            case 'W':\n                return number;\n        }\n    },\n    week: {\n        dow: 0, // Sunday is the first day of the week\n        doy: 3, // The week that contains Jan 4th is the first week of the year (7 + 0 - 4)\n    },\n    meridiemParse: /rati|sokallim|donparam|sanje/,\n    meridiemHour: function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'rati') {\n            return hour < 4 ? hour : hour + 12;\n        } else if (meridiem === 'sokallim') {\n            return hour;\n        } else if (meridiem === 'donparam') {\n            return hour > 12 ? hour : hour + 12;\n        } else if (meridiem === 'sanje') {\n            return hour + 12;\n        }\n    },\n    meridiem: function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'rati';\n        } else if (hour < 12) {\n            return 'sokallim';\n        } else if (hour < 16) {\n            return 'donparam';\n        } else if (hour < 20) {\n            return 'sanje';\n        } else {\n            return 'rati';\n        }\n    },\n});\n"],"names":["processRelativeTime","number","withoutSuffix","key","isFuture","format","gomLatn","moment","period","hour","meridiem","minute","isLower"],"mappings":"yCAAA;AACA;AACA;AAIA,SAASA,EAAoBC,EAAQC,EAAeC,EAAKC,EAAU,CAC/D,IAAIC,EAAS,CACT,EAAG,CAAC,qBAAsB,eAAe,EACzC,GAAI,CAACJ,EAAS,cAAeA,EAAS,SAAS,EAC/C,EAAG,CAAC,aAAc,UAAU,EAC5B,GAAI,CAACA,EAAS,YAAaA,EAAS,SAAS,EAC7C,EAAG,CAAC,YAAa,QAAQ,EACzB,GAAI,CAACA,EAAS,WAAYA,EAAS,QAAQ,EAC3C,EAAG,CAAC,YAAa,QAAQ,EACzB,GAAI,CAACA,EAAS,WAAYA,EAAS,MAAM,EACzC,EAAG,CAAC,eAAgB,WAAW,EAC/B,GAAI,CAACA,EAAS,cAAeA,EAAS,SAAS,EAC/C,EAAG,CAAC,aAAc,UAAU,EAC5B,GAAI,CAACA,EAAS,YAAaA,EAAS,SAAS,CACrD,EACI,OAAOG,EAAWC,EAAOF,CAAG,EAAE,CAAC,EAAIE,EAAOF,CAAG,EAAE,CAAC,CACpD,CAEA,MAAAG,EAAeC,EAAO,aAAa,WAAY,CAC3C,OAAQ,CACJ,WACI,4EAA4E,MACxE,GAChB,EACQ,OAAQ,wIAAwI,MAC5I,GACZ,EACQ,SAAU,iBAClB,EACI,YACI,4DAA4D,MAAM,GAAG,EACzE,iBAAkB,GAClB,SAAU,uDAAuD,MAAM,GAAG,EAC1E,cAAe,qCAAqC,MAAM,GAAG,EAC7D,YAAa,uBAAuB,MAAM,GAAG,EAC7C,mBAAoB,GACpB,eAAgB,CACZ,GAAI,iBACJ,IAAK,oBACL,EAAG,aACH,GAAI,cACJ,IAAK,6BACL,KAAM,sCACN,KAAM,iCACd,EACI,SAAU,CACN,QAAS,WACT,QAAS,cACT,SAAU,sBACV,QAAS,WACT,SAAU,sBACV,SAAU,GAClB,EACI,aAAc,CACV,OAAQ,KACR,KAAM,UACN,EAAGP,EACH,GAAIA,EACJ,EAAGA,EACH,GAAIA,EACJ,EAAGA,EACH,GAAIA,EACJ,EAAGA,EACH,GAAIA,EACJ,EAAGA,EACH,GAAIA,EACJ,EAAGA,EACH,GAAIA,CACZ,EACI,uBAAwB,cACxB,QAAS,SAAUC,EAAQO,EAAQ,CAC/B,OAAQA,EAAM,CAEV,IAAK,IACD,OAAOP,EAAS,KACpB,QACA,IAAK,IACL,IAAK,IACL,IAAK,MACL,IAAK,IACL,IAAK,IACL,IAAK,IACD,OAAOA,CACvB,CACI,EACA,KAAM,CACF,IAAK,EACL,IAAK,CACb,EACI,cAAe,+BACf,aAAc,SAAUQ,EAAMC,EAAU,CAIpC,GAHID,IAAS,KACTA,EAAO,GAEPC,IAAa,OACb,OAAOD,EAAO,EAAIA,EAAOA,EAAO,GAC7B,GAAIC,IAAa,WACpB,OAAOD,EACJ,GAAIC,IAAa,WACpB,OAAOD,EAAO,GAAKA,EAAOA,EAAO,GAC9B,GAAIC,IAAa,QACpB,OAAOD,EAAO,EAEtB,EACA,SAAU,SAAUA,EAAME,EAAQC,EAAS,CACvC,OAAIH,EAAO,EACA,OACAA,EAAO,GACP,WACAA,EAAO,GACP,WACAA,EAAO,GACP,QAEA,MAEf,CACJ,CAAC","x_google_ignoreList":[0]}