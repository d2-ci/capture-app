{"version":3,"file":"ru-Di4zKpIn.js","sources":["../../../../../node_modules/moment/dist/locale/ru.js"],"sourcesContent":["//! moment.js locale configuration\n//! locale : Russian [ru]\n//! author : Viktorminator : https://github.com/Viktorminator\n//! author : Menelion Elensúle : https://github.com/Oire\n//! author : Коренберг Марк : https://github.com/socketpair\n\nimport moment from '../moment';\n\nfunction plural(word, num) {\n    var forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11\n        ? forms[0]\n        : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n          ? forms[1]\n          : forms[2];\n}\nfunction relativeTimeWithPlural(number, withoutSuffix, key) {\n    var format = {\n        ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n        mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n        hh: 'час_часа_часов',\n        dd: 'день_дня_дней',\n        ww: 'неделя_недели_недель',\n        MM: 'месяц_месяца_месяцев',\n        yy: 'год_года_лет',\n    };\n    if (key === 'm') {\n        return withoutSuffix ? 'минута' : 'минуту';\n    } else {\n        return number + ' ' + plural(format[key], +number);\n    }\n}\nvar monthsParse = [\n    /^янв/i,\n    /^фев/i,\n    /^мар/i,\n    /^апр/i,\n    /^ма[йя]/i,\n    /^июн/i,\n    /^июл/i,\n    /^авг/i,\n    /^сен/i,\n    /^окт/i,\n    /^ноя/i,\n    /^дек/i,\n];\n\n// http://new.gramota.ru/spravka/rules/139-prop : § 103\n// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\nexport default moment.defineLocale('ru', {\n    months: {\n        format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split(\n            '_'\n        ),\n        standalone:\n            'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(\n                '_'\n            ),\n    },\n    monthsShort: {\n        // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку?\n        format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split(\n            '_'\n        ),\n        standalone:\n            'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split(\n                '_'\n            ),\n    },\n    weekdays: {\n        standalone:\n            'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split(\n                '_'\n            ),\n        format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split(\n            '_'\n        ),\n        isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?] ?dddd/,\n    },\n    weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n    weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n    monthsParse: monthsParse,\n    longMonthsParse: monthsParse,\n    shortMonthsParse: monthsParse,\n\n    // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n    monthsRegex:\n        /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n    // копия предыдущего\n    monthsShortRegex:\n        /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n    // полные названия с падежами\n    monthsStrictRegex:\n        /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n\n    // Выражение, которое соответствует только сокращённым формам\n    monthsShortStrictRegex:\n        /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY г.',\n        LLL: 'D MMMM YYYY г., H:mm',\n        LLLL: 'dddd, D MMMM YYYY г., H:mm',\n    },\n    calendar: {\n        sameDay: '[Сегодня, в] LT',\n        nextDay: '[Завтра, в] LT',\n        lastDay: '[Вчера, в] LT',\n        nextWeek: function (now) {\n            if (now.week() !== this.week()) {\n                switch (this.day()) {\n                    case 0:\n                        return '[В следующее] dddd, [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В следующий] dddd, [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В следующую] dddd, [в] LT';\n                }\n            } else {\n                if (this.day() === 2) {\n                    return '[Во] dddd, [в] LT';\n                } else {\n                    return '[В] dddd, [в] LT';\n                }\n            }\n        },\n        lastWeek: function (now) {\n            if (now.week() !== this.week()) {\n                switch (this.day()) {\n                    case 0:\n                        return '[В прошлое] dddd, [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В прошлый] dddd, [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В прошлую] dddd, [в] LT';\n                }\n            } else {\n                if (this.day() === 2) {\n                    return '[Во] dddd, [в] LT';\n                } else {\n                    return '[В] dddd, [в] LT';\n                }\n            }\n        },\n        sameElse: 'L',\n    },\n    relativeTime: {\n        future: 'через %s',\n        past: '%s назад',\n        s: 'несколько секунд',\n        ss: relativeTimeWithPlural,\n        m: relativeTimeWithPlural,\n        mm: relativeTimeWithPlural,\n        h: 'час',\n        hh: relativeTimeWithPlural,\n        d: 'день',\n        dd: relativeTimeWithPlural,\n        w: 'неделя',\n        ww: relativeTimeWithPlural,\n        M: 'месяц',\n        MM: relativeTimeWithPlural,\n        y: 'год',\n        yy: relativeTimeWithPlural,\n    },\n    meridiemParse: /ночи|утра|дня|вечера/i,\n    isPM: function (input) {\n        return /^(дня|вечера)$/.test(input);\n    },\n    meridiem: function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'ночи';\n        } else if (hour < 12) {\n            return 'утра';\n        } else if (hour < 17) {\n            return 'дня';\n        } else {\n            return 'вечера';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n    ordinal: function (number, period) {\n        switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n                return number + '-й';\n            case 'D':\n                return number + '-го';\n            case 'w':\n            case 'W':\n                return number + '-я';\n            default:\n                return number;\n        }\n    },\n    week: {\n        dow: 1, // Monday is the first day of the week.\n        doy: 4, // The week that contains Jan 4th is the first week of the year.\n    },\n});\n"],"names":["plural","word","num","forms","relativeTimeWithPlural","number","withoutSuffix","key","format","monthsParse","ru","moment","now","input","hour","minute","isLower","period"],"mappings":"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","x_google_ignoreList":[0]}