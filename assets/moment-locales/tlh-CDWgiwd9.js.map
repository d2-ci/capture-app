{"version":3,"file":"tlh-CDWgiwd9.js","sources":["../../../../../node_modules/moment/dist/locale/tlh.js"],"sourcesContent":["//! moment.js locale configuration\n//! locale : Klingon [tlh]\n//! author : Dominika Kruk : https://github.com/amaranthrose\n\nimport moment from '../moment';\n\nvar numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');\n\nfunction translateFuture(output) {\n    var time = output;\n    time =\n        output.indexOf('jaj') !== -1\n            ? time.slice(0, -3) + 'leS'\n            : output.indexOf('jar') !== -1\n              ? time.slice(0, -3) + 'waQ'\n              : output.indexOf('DIS') !== -1\n                ? time.slice(0, -3) + 'nem'\n                : time + ' pIq';\n    return time;\n}\n\nfunction translatePast(output) {\n    var time = output;\n    time =\n        output.indexOf('jaj') !== -1\n            ? time.slice(0, -3) + 'Hu’'\n            : output.indexOf('jar') !== -1\n              ? time.slice(0, -3) + 'wen'\n              : output.indexOf('DIS') !== -1\n                ? time.slice(0, -3) + 'ben'\n                : time + ' ret';\n    return time;\n}\n\nfunction translate(number, withoutSuffix, string, isFuture) {\n    var numberNoun = numberAsNoun(number);\n    switch (string) {\n        case 'ss':\n            return numberNoun + ' lup';\n        case 'mm':\n            return numberNoun + ' tup';\n        case 'hh':\n            return numberNoun + ' rep';\n        case 'dd':\n            return numberNoun + ' jaj';\n        case 'MM':\n            return numberNoun + ' jar';\n        case 'yy':\n            return numberNoun + ' DIS';\n    }\n}\n\nfunction numberAsNoun(number) {\n    var hundred = Math.floor((number % 1000) / 100),\n        ten = Math.floor((number % 100) / 10),\n        one = number % 10,\n        word = '';\n    if (hundred > 0) {\n        word += numbersNouns[hundred] + 'vatlh';\n    }\n    if (ten > 0) {\n        word += (word !== '' ? ' ' : '') + numbersNouns[ten] + 'maH';\n    }\n    if (one > 0) {\n        word += (word !== '' ? ' ' : '') + numbersNouns[one];\n    }\n    return word === '' ? 'pagh' : word;\n}\n\nexport default moment.defineLocale('tlh', {\n    months: 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split(\n        '_'\n    ),\n    monthsShort:\n        'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split(\n            '_'\n        ),\n    monthsParseExact: true,\n    weekdays: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(\n        '_'\n    ),\n    weekdaysShort:\n        'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n    weekdaysMin:\n        'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm',\n    },\n    calendar: {\n        sameDay: '[DaHjaj] LT',\n        nextDay: '[wa’leS] LT',\n        nextWeek: 'LLL',\n        lastDay: '[wa’Hu’] LT',\n        lastWeek: 'LLL',\n        sameElse: 'L',\n    },\n    relativeTime: {\n        future: translateFuture,\n        past: translatePast,\n        s: 'puS lup',\n        ss: translate,\n        m: 'wa’ tup',\n        mm: translate,\n        h: 'wa’ rep',\n        hh: translate,\n        d: 'wa’ jaj',\n        dd: translate,\n        M: 'wa’ jar',\n        MM: translate,\n        y: 'wa’ DIS',\n        yy: translate,\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1, // Monday is the first day of the week.\n        doy: 4, // The week that contains Jan 4th is the first week of the year.\n    },\n});\n"],"names":["numbersNouns","translateFuture","output","time","translatePast","translate","number","withoutSuffix","string","isFuture","numberNoun","numberAsNoun","hundred","ten","one","word","tlh","moment"],"mappings":"yCAAA;AACA;AACA;AAIA,IAAIA,EAAe,iDAAiD,MAAM,GAAG,EAE7E,SAASC,EAAgBC,EAAQ,CAC7B,IAAIC,EAAOD,EACX,OAAAC,EACID,EAAO,QAAQ,KAAK,IAAM,GACpBC,EAAK,MAAM,EAAG,EAAE,EAAI,MACpBD,EAAO,QAAQ,KAAK,IAAM,GACxBC,EAAK,MAAM,EAAG,EAAE,EAAI,MACpBD,EAAO,QAAQ,KAAK,IAAM,GACxBC,EAAK,MAAM,EAAG,EAAE,EAAI,MACpBA,EAAO,OACdA,CACX,CAEA,SAASC,EAAcF,EAAQ,CAC3B,IAAIC,EAAOD,EACX,OAAAC,EACID,EAAO,QAAQ,KAAK,IAAM,GACpBC,EAAK,MAAM,EAAG,EAAE,EAAI,MACpBD,EAAO,QAAQ,KAAK,IAAM,GACxBC,EAAK,MAAM,EAAG,EAAE,EAAI,MACpBD,EAAO,QAAQ,KAAK,IAAM,GACxBC,EAAK,MAAM,EAAG,EAAE,EAAI,MACpBA,EAAO,OACdA,CACX,CAEA,SAASE,EAAUC,EAAQC,EAAeC,EAAQC,EAAU,CACxD,IAAIC,EAAaC,EAAaL,CAAM,EACpC,OAAQE,EAAM,CACV,IAAK,KACD,OAAOE,EAAa,OACxB,IAAK,KACD,OAAOA,EAAa,OACxB,IAAK,KACD,OAAOA,EAAa,OACxB,IAAK,KACD,OAAOA,EAAa,OACxB,IAAK,KACD,OAAOA,EAAa,OACxB,IAAK,KACD,OAAOA,EAAa,MAChC,CACA,CAEA,SAASC,EAAaL,EAAQ,CAC1B,IAAIM,EAAU,KAAK,MAAON,EAAS,IAAQ,GAAG,EAC1CO,EAAM,KAAK,MAAOP,EAAS,IAAO,EAAE,EACpCQ,EAAMR,EAAS,GACfS,EAAO,GACX,OAAIH,EAAU,IACVG,GAAQf,EAAaY,CAAO,EAAI,SAEhCC,EAAM,IACNE,IAASA,IAAS,GAAK,IAAM,IAAMf,EAAaa,CAAG,EAAI,OAEvDC,EAAM,IACNC,IAASA,IAAS,GAAK,IAAM,IAAMf,EAAac,CAAG,GAEhDC,IAAS,GAAK,OAASA,CAClC,CAEA,MAAAC,EAAeC,EAAO,aAAa,MAAO,CACtC,OAAQ,kMAAkM,MACtM,GACR,EACI,YACI,0HAA0H,MACtH,GACZ,EACI,iBAAkB,GAClB,SAAU,2DAA2D,MACjE,GACR,EACI,cACI,2DAA2D,MAAM,GAAG,EACxE,YACI,2DAA2D,MAAM,GAAG,EACxE,eAAgB,CACZ,GAAI,QACJ,IAAK,WACL,EAAG,aACH,GAAI,cACJ,IAAK,oBACL,KAAM,yBACd,EACI,SAAU,CACN,QAAS,cACT,QAAS,cACT,SAAU,MACV,QAAS,cACT,SAAU,MACV,SAAU,GAClB,EACI,aAAc,CACV,OAAQhB,EACR,KAAMG,EACN,EAAG,UACH,GAAIC,EACJ,EAAG,UACH,GAAIA,EACJ,EAAG,UACH,GAAIA,EACJ,EAAG,UACH,GAAIA,EACJ,EAAG,UACH,GAAIA,EACJ,EAAG,UACH,GAAIA,CACZ,EACI,uBAAwB,YACxB,QAAS,MACT,KAAM,CACF,IAAK,EACL,IAAK,CACb,CACA,CAAC","x_google_ignoreList":[0]}