{"version":3,"file":"lb-DVtRL83G.js","sources":["../../../../../node_modules/moment/dist/locale/lb.js"],"sourcesContent":["//! moment.js locale configuration\n//! locale : Luxembourgish [lb]\n//! author : mweimerskirch : https://github.com/mweimerskirch\n//! author : David Raison : https://github.com/kwisatz\n\nimport moment from '../moment';\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n    var format = {\n        m: ['eng Minutt', 'enger Minutt'],\n        h: ['eng Stonn', 'enger Stonn'],\n        d: ['een Dag', 'engem Dag'],\n        M: ['ee Mount', 'engem Mount'],\n        y: ['ee Joer', 'engem Joer'],\n    };\n    return withoutSuffix ? format[key][0] : format[key][1];\n}\nfunction processFutureTime(string) {\n    var number = string.substr(0, string.indexOf(' '));\n    if (eifelerRegelAppliesToNumber(number)) {\n        return 'a ' + string;\n    }\n    return 'an ' + string;\n}\nfunction processPastTime(string) {\n    var number = string.substr(0, string.indexOf(' '));\n    if (eifelerRegelAppliesToNumber(number)) {\n        return 'viru ' + string;\n    }\n    return 'virun ' + string;\n}\n/**\n * Returns true if the word before the given number loses the '-n' ending.\n * e.g. 'an 10 Deeg' but 'a 5 Deeg'\n *\n * @param number {integer}\n * @returns {boolean}\n */\nfunction eifelerRegelAppliesToNumber(number) {\n    number = parseInt(number, 10);\n    if (isNaN(number)) {\n        return false;\n    }\n    if (number < 0) {\n        // Negative Number --> always true\n        return true;\n    } else if (number < 10) {\n        // Only 1 digit\n        if (4 <= number && number <= 7) {\n            return true;\n        }\n        return false;\n    } else if (number < 100) {\n        // 2 digits\n        var lastDigit = number % 10,\n            firstDigit = number / 10;\n        if (lastDigit === 0) {\n            return eifelerRegelAppliesToNumber(firstDigit);\n        }\n        return eifelerRegelAppliesToNumber(lastDigit);\n    } else if (number < 10000) {\n        // 3 or 4 digits --> recursively check first digit\n        while (number >= 10) {\n            number = number / 10;\n        }\n        return eifelerRegelAppliesToNumber(number);\n    } else {\n        // Anything larger than 4 digits: recursively check first n-3 digits\n        number = number / 1000;\n        return eifelerRegelAppliesToNumber(number);\n    }\n}\n\nexport default moment.defineLocale('lb', {\n    months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split(\n        '_'\n    ),\n    monthsShort:\n        'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split(\n            '_'\n        ),\n    monthsParseExact: true,\n    weekdays:\n        'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split(\n            '_'\n        ),\n    weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),\n    weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm [Auer]',\n        LTS: 'H:mm:ss [Auer]',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm [Auer]',\n        LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]',\n    },\n    calendar: {\n        sameDay: '[Haut um] LT',\n        sameElse: 'L',\n        nextDay: '[Muer um] LT',\n        nextWeek: 'dddd [um] LT',\n        lastDay: '[Gëschter um] LT',\n        lastWeek: function () {\n            // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule\n            switch (this.day()) {\n                case 2:\n                case 4:\n                    return '[Leschten] dddd [um] LT';\n                default:\n                    return '[Leschte] dddd [um] LT';\n            }\n        },\n    },\n    relativeTime: {\n        future: processFutureTime,\n        past: processPastTime,\n        s: 'e puer Sekonnen',\n        ss: '%d Sekonnen',\n        m: processRelativeTime,\n        mm: '%d Minutten',\n        h: processRelativeTime,\n        hh: '%d Stonnen',\n        d: processRelativeTime,\n        dd: '%d Deeg',\n        M: processRelativeTime,\n        MM: '%d Méint',\n        y: processRelativeTime,\n        yy: '%d Joer',\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1, // Monday is the first day of the week.\n        doy: 4, // The week that contains Jan 4th is the first week of the year.\n    },\n});\n"],"names":["processRelativeTime","number","withoutSuffix","key","isFuture","format","processFutureTime","string","eifelerRegelAppliesToNumber","processPastTime","lastDigit","firstDigit","lb","moment"],"mappings":"yCAAA;AACA;AACA;AACA;AAIA,SAASA,EAAoBC,EAAQC,EAAeC,EAAKC,EAAU,CAC/D,IAAIC,EAAS,CACT,EAAG,CAAC,aAAc,cAAc,EAChC,EAAG,CAAC,YAAa,aAAa,EAC9B,EAAG,CAAC,UAAW,WAAW,EAC1B,EAAG,CAAC,WAAY,aAAa,EAC7B,EAAG,CAAC,UAAW,YAAY,CACnC,EACI,OAAOH,EAAgBG,EAAOF,CAAG,EAAE,CAAC,EAAIE,EAAOF,CAAG,EAAE,CAAC,CACzD,CACA,SAASG,EAAkBC,EAAQ,CAC/B,IAAIN,EAASM,EAAO,OAAO,EAAGA,EAAO,QAAQ,GAAG,CAAC,EACjD,OAAIC,EAA4BP,CAAM,EAC3B,KAAOM,EAEX,MAAQA,CACnB,CACA,SAASE,EAAgBF,EAAQ,CAC7B,IAAIN,EAASM,EAAO,OAAO,EAAGA,EAAO,QAAQ,GAAG,CAAC,EACjD,OAAIC,EAA4BP,CAAM,EAC3B,QAAUM,EAEd,SAAWA,CACtB,CAQA,SAASC,EAA4BP,EAAQ,CAEzC,GADAA,EAAS,SAASA,EAAQ,EAAE,EACxB,MAAMA,CAAM,EACZ,MAAO,GAEX,GAAIA,EAAS,EAET,MAAO,GACJ,GAAIA,EAAS,GAEhB,MAAI,IAAKA,GAAUA,GAAU,EAI1B,GAAIA,EAAS,IAAK,CAErB,IAAIS,EAAYT,EAAS,GACrBU,EAAaV,EAAS,GAC1B,OACWO,EADPE,IAAc,EACqBC,EAEJD,CAFc,CAGrD,SAAWT,EAAS,IAAO,CAEvB,KAAOA,GAAU,IACbA,EAASA,EAAS,GAEtB,OAAOO,EAA4BP,CAAM,CAC7C,KAEI,QAAAA,EAASA,EAAS,IACXO,EAA4BP,CAAM,CAEjD,CAEA,MAAAW,EAAeC,EAAO,aAAa,KAAM,CACrC,OAAQ,uFAAuF,MAC3F,GACR,EACI,YACI,+DAA+D,MAC3D,GACZ,EACI,iBAAkB,GAClB,SACI,mEAAmE,MAC/D,GACZ,EACI,cAAe,8BAA8B,MAAM,GAAG,EACtD,YAAa,uBAAuB,MAAM,GAAG,EAC7C,mBAAoB,GACpB,eAAgB,CACZ,GAAI,cACJ,IAAK,iBACL,EAAG,aACH,GAAI,eACJ,IAAK,2BACL,KAAM,gCACd,EACI,SAAU,CACN,QAAS,eACT,SAAU,IACV,QAAS,eACT,SAAU,eACV,QAAS,mBACT,SAAU,UAAY,CAElB,OAAQ,KAAK,IAAG,EAAE,CACd,IAAK,GACL,IAAK,GACD,MAAO,0BACX,QACI,MAAO,wBAC3B,CACQ,CACR,EACI,aAAc,CACV,OAAQP,EACR,KAAMG,EACN,EAAG,kBACH,GAAI,cACJ,EAAGT,EACH,GAAI,cACJ,EAAGA,EACH,GAAI,aACJ,EAAGA,EACH,GAAI,UACJ,EAAGA,EACH,GAAI,WACJ,EAAGA,EACH,GAAI,SACZ,EACI,uBAAwB,YACxB,QAAS,MACT,KAAM,CACF,IAAK,EACL,IAAK,CACb,CACA,CAAC","x_google_ignoreList":[0]}