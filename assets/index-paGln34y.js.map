{"version":3,"file":"index-paGln34y.js","sources":["../../../../node_modules/date-fns/locale/pl/build_distance_in_words_locale/index.js","../../../../node_modules/date-fns/locale/pl/build_format_locale/index.js","../../../../node_modules/date-fns/locale/pl/index.js"],"sourcesContent":["function declensionGroup (scheme, count) {\n  if (count === 1) {\n    return scheme.one\n  }\n\n  var rem100 = count % 100\n\n  // ends with 11-20\n  if (rem100 <= 20 && rem100 > 10) {\n    return scheme.other\n  }\n\n  var rem10 = rem100 % 10\n\n  // ends with 2, 3, 4\n  if (rem10 >= 2 && rem10 <= 4) {\n    return scheme.twoFour\n  }\n\n  return scheme.other\n}\n\nfunction declension (scheme, count, time) {\n  time = time || 'regular'\n  var group = declensionGroup(scheme, count)\n  var finalText = group[time] || group\n  return finalText.replace('{{count}}', count)\n}\n\nfunction buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: {\n        regular: 'mniej niż sekunda',\n        past: 'mniej niż sekundę',\n        future: 'mniej niż sekundę'\n      },\n      twoFour: 'mniej niż {{count}} sekundy',\n      other: 'mniej niż {{count}} sekund'\n    },\n\n    xSeconds: {\n      one: {\n        regular: 'sekunda',\n        past: 'sekundę',\n        future: 'sekundę'\n      },\n      twoFour: '{{count}} sekundy',\n      other: '{{count}} sekund'\n    },\n\n    halfAMinute: {\n      one: 'pół minuty',\n      twoFour: 'pół minuty',\n      other: 'pół minuty'\n    },\n\n    lessThanXMinutes: {\n      one: {\n        regular: 'mniej niż minuta',\n        past: 'mniej niż minutę',\n        future: 'mniej niż minutę'\n      },\n      twoFour: 'mniej niż {{count}} minuty',\n      other: 'mniej niż {{count}} minut'\n    },\n\n    xMinutes: {\n      one: {\n        regular: 'minuta',\n        past: 'minutę',\n        future: 'minutę'\n      },\n      twoFour: '{{count}} minuty',\n      other: '{{count}} minut'\n    },\n\n    aboutXHours: {\n      one: {\n        regular: 'około godzina',\n        past: 'około godziny',\n        future: 'około godzinę'\n      },\n      twoFour: 'około {{count}} godziny',\n      other: 'około {{count}} godzin'\n    },\n\n    xHours: {\n      one: {\n        regular: 'godzina',\n        past: 'godzinę',\n        future: 'godzinę'\n      },\n      twoFour: '{{count}} godziny',\n      other: '{{count}} godzin'\n    },\n\n    xDays: {\n      one: {\n        regular: 'dzień',\n        past: 'dzień',\n        future: '1 dzień'\n      },\n      twoFour: '{{count}} dni',\n      other: '{{count}} dni'\n    },\n\n    aboutXMonths: {\n      one: 'około miesiąc',\n      twoFour: 'około {{count}} miesiące',\n      other: 'około {{count}} miesięcy'\n    },\n\n    xMonths: {\n      one: 'miesiąc',\n      twoFour: '{{count}} miesiące',\n      other: '{{count}} miesięcy'\n    },\n\n    aboutXYears: {\n      one: 'około rok',\n      twoFour: 'około {{count}} lata',\n      other: 'około {{count}} lat'\n    },\n\n    xYears: {\n      one: 'rok',\n      twoFour: '{{count}} lata',\n      other: '{{count}} lat'\n    },\n\n    overXYears: {\n      one: 'ponad rok',\n      twoFour: 'ponad {{count}} lata',\n      other: 'ponad {{count}} lat'\n    },\n\n    almostXYears: {\n      one: 'prawie rok',\n      twoFour: 'prawie {{count}} lata',\n      other: 'prawie {{count}} lat'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var scheme = distanceInWordsLocale[token]\n    if (!options.addSuffix) {\n      return declension(scheme, count)\n    }\n\n    if (options.comparison > 0) {\n      return 'za ' + declension(scheme, count, 'future')\n    } else {\n      return declension(scheme, count, 'past') + ' temu'\n    }\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  var months3char = ['sty', 'lut', 'mar', 'kwi', 'maj', 'cze', 'lip', 'sie', 'wrz', 'paź', 'lis', 'gru']\n  var monthsFull = ['styczeń', 'luty', 'marzec', 'kwiecień', 'maj', 'czerwiec', 'lipiec', 'sierpień', 'wrzesień', 'październik', 'listopad', 'grudzień']\n  var weekdays2char = ['nd', 'pn', 'wt', 'śr', 'cz', 'pt', 'sb']\n  var weekdays3char = ['niedz.', 'pon.', 'wt.', 'śr.', 'czw.', 'piąt.', 'sob.']\n  var weekdaysFull = ['niedziela', 'poniedziałek', 'wtorek', 'środa', 'czwartek', 'piątek', 'sobota']\n  var meridiem = ['w nocy', 'rano', 'po południu', 'wieczorem']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // Time of day\n    'A': function (date) {\n      var hours = date.getHours()\n      if (hours >= 17) {\n        return meridiem[3]\n      } else if (hours >= 12) {\n        return meridiem[2]\n      } else if (hours >= 4) {\n        return meridiem[1]\n      } else {\n        return meridiem[0]\n      }\n    }\n  }\n\n  formatters.a = formatters.A\n  formatters.aa = formatters.A\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      // Well, it should be just a number without any suffix\n      return formatters[formatterToken](date).toString()\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nmodule.exports = buildFormatLocale\n","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary Polish locale.\n * @author Mateusz Derks [@ertrzyiks]{@link https://github.com/ertrzyiks}\n * @author Just RAG [@justrag]{@link https://github.com/justrag}\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n"],"names":["declensionGroup","scheme","count","rem100","rem10","declension","time","group","finalText","buildDistanceInWordsLocale","distanceInWordsLocale","localize","token","options","build_distance_in_words_locale","buildFormattingTokensRegExp","require$$0","buildFormatLocale","months3char","monthsFull","weekdays2char","weekdays3char","weekdaysFull","meridiem","formatters","date","hours","ordinalFormatters","formatterToken","build_format_locale","require$$1","pl"],"mappings":"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","x_google_ignoreList":[0,1,2]}